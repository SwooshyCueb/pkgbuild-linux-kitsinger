# Maintainer: Markus Kitsinger (SwooshyCueb) <root@swooshalicio.us>
# Contributor: Piotr Gorski <lucjan.lucjanov@gmail.com>
# Contributor: Jan Alexander Steffens (heftig) <jan.steffens@gmail.com>
# Contributor: Tobias Powalowski <tpowa@archlinux.org>
# Contributor: Thomas Baechler <thomas@archlinux.org>

### BUILD OPTIONS
# Set these variables to ANYTHING that is not null to enable them

### Tweak kernel options prior to a build via nconfig
_makenconfig=

### Tweak kernel options prior to a build via menuconfig
_makemenuconfig=

### Tweak kernel options prior to a build via xconfig
_makexconfig=

### Tweak kernel options prior to a build via gconfig
_makegconfig=

# NUMA is optimized for multi-socket motherboards.
# A single multi-core CPU actually runs slower with NUMA enabled.
# See, https://bugs.archlinux.org/task/31187
_NUMAdisable=

# Compile ONLY used modules to VASTLYreduce the number of modules built
# and the build time.
#
# To keep track of which modules are needed for your specific system/hardware,
# give module_db script a try: https://aur.archlinux.org/packages/modprobed-db
# This PKGBUILD read the database kept if it exists
#
# More at this wiki page ---> https://wiki.archlinux.org/index.php/Modprobed-db
_localmodcfg=

# Use the current kernel's .config file
# Enabling this option will use the .config of the RUNNING kernel rather than
# the ARCH defaults. Useful when the package gets updated and you already went
# through the trouble of customizing your config options.  NOT recommended when
# a new kernel is released, but again, convenient for package bumps.
_use_current=

### Running with a 1000 HZ tick rate
_1k_HZ_ticks=y

# explicitly set undefined behavior sanity checker kconfig options
# this option may be overridden by _use_current
_use_ubsan=

# explicitly set memory debugging kconfig options
# this option may be overridden by _use_current
_kmem_debug=

# explicitly set thread lock debugging kconfig options
# this option may be overridden by _use_current
_tlock_debug=

### Do not edit below this line unless you know what you're doing

pkgbase=linux-kitsinger-6.6
# pkgname=('linux-kitsinger-6.6' 'linux-kitsinger-6.6-headers' 'linux-kitsinger-6.6-docs')
_major=6.6
_minor=13
pkgver=${_major}.${_minor}
_srcname=linux-${pkgver}
#_srcname=linux-${_major}
pkgrel=1
pkgdesc='Linux with pcie-reset, futex2, etc'
arch=('x86_64')
url="https://github.com/SwooshyCueb/linux-kitsinger-PKGBUILD"
license=('GPL2')
options=('!strip' '!debug')
makedepends=(
	bc
	cpio
	gettext
	libelf
	pahole
	perl
	python
	tar
	xz

	# htmldocs
	graphviz
	imagemagick
	python-sphinx
	texlive-latexextra

	# our stuff
	git
)

_lucjan_sha="566387a04594bbefa935160cbdead273964e63de"
_lucjan_path="https://gitlab.com/sirlucjan/kernel-patches/-/raw/${_lucjan_sha}/${_major}"

_lucjan_arch_path="${_lucjan_path}/arch-patches-v6-sep"
_lucjan_futex2dev_path="${_lucjan_path}/futex-dev-patches-v3-sep"
_lucjan_fixes_path="${_lucjan_path}/fixes-miscellaneous-v2-sep"

_clr_sha="7936ffab8408e4786a4c1ec42b91c2e3e5b68c25"
_clr_path="https://raw.githubusercontent.com/clearlinux-pkgs/linux/${_clr_sha}"

_zen_gh="https://github.com/zen-kernel/zen-kernel/commit"

_neptune_gl="https://gitlab.com/evlaV/linux-integration/-/commit"

_xanmod_sha=2cbd470eace851670e953b7cb9ab767102dfa8b6
_xanmod_path="https://raw.githubusercontent.com/xanmod/linux-patches/${_xanmod_sha}/linux-${_major}.y-xanmod/"

_kernel_git="https://git.kernel.org/pub/scm/linux/kernel/git"
_torvalds_path="${_kernel_git}/torvalds/linux.git/patch/"

_amdgfx_path="https://lore.kernel.org/amd-gfx"
_joshie_s="joshua@froggi.es"

source=(
	"https://www.kernel.org/pub/linux/kernel/v6.x/${_srcname}.tar.xz"
	"https://www.kernel.org/pub/linux/kernel/v6.x/${_srcname}.tar.sign"

	# Lucjan has a differnet set of patches for arch. Let's continue using them.
	"${_lucjan_arch_path}/0001-ZEN-Add-sysctl-and-CONFIG-to-disallow-unprivileged-C.patch"
	"${_lucjan_arch_path}/0002-drivers-firmware-skip-simpledrm-if-nvidia-drm.modese.patch"
	"${_lucjan_arch_path}/0003-sched-fair-Ratelimit-update-to-tg-load_avg.patch"
	"${_lucjan_arch_path}/0004-HID-amd_sfh-Check-that-sensors-are-enabled-before-se.patch"
	"${_lucjan_arch_path}/0005-Revert-HID-amd_sfh-Check-that-sensors-are-enabled-be.patch"
	"${_lucjan_arch_path}/0006-ASoC-SOF-sof-client-fix-build-when-only-IPC4-is-sele.patch"

	"${_lucjan_path}/futex-patches/0001-futex-${_major}-Add-entry-point-for-FUTEX_WAIT_MULTIPLE-op.patch"

	"${_lucjan_futex2dev_path}/0001-futex-Clarify-FUTEX2-flags.patch"
	"${_lucjan_futex2dev_path}/0002-futex-Extend-the-FUTEX2-flags.patch"
	"${_lucjan_futex2dev_path}/0003-futex-Flag-conversion.patch"
	"${_lucjan_futex2dev_path}/0004-futex-Validate-futex-value-against-futex-size.patch"
	"${_lucjan_futex2dev_path}/0005-futex-Add-sys_futex_wake.patch"
	"${_lucjan_futex2dev_path}/0006-futex-FLAGS_STRICT.patch"
	"${_lucjan_futex2dev_path}/0007-futex-Add-sys_futex_wait.patch"
	"${_lucjan_futex2dev_path}/0008-futex-Propagate-flags-into-get_futex_key.patch"
	"${_lucjan_futex2dev_path}/0009-futex-Add-flags2-argument-to-futex_requeue.patch"
	"${_lucjan_futex2dev_path}/0010-futex-Add-sys_futex_requeue.patch"
	"${_lucjan_futex2dev_path}/0011-mm-Add-vmalloc_huge_node.patch"
	"${_lucjan_futex2dev_path}/0012-futex-Implement-FUTEX2_NUMA.patch"
	"${_lucjan_futex2dev_path}/0013-futex-Propagate-flags-into-futex_get_value_locked.patch"
	"${_lucjan_futex2dev_path}/0014-futex-Enable-FUTEX2_-8-16.patch"
	"${_lucjan_futex2dev_path}/0015-futex-selftests-Extend-the-futex-selftests.patch"
	"${_lucjan_futex2dev_path}/0016-futex-selftests-Extend-the-futex-selftests-for-NUMA.patch"
	"${_lucjan_futex2dev_path}/0017-futex-Force-futex-hash-collision.patch"
	"${_lucjan_futex2dev_path}/0018-futex-Fix-hardcoded-flags.patch"

	"${_lucjan_fixes_path}/0001-mm-Change-dirty-writeback-defaults.patch"
	"${_lucjan_fixes_path}/0002-ZEN-mm-Lower-the-non-hugetlbpage-pageblock-size-to-r.patch"
	"${_lucjan_fixes_path}/0003-padata-Do-not-mark-padata_mt_helper-as-__init.patch"
	"${_lucjan_fixes_path}/0004-Initialize-ata-before-graphics.patch"
	"${_lucjan_fixes_path}/0005-Bluetooth-btusb-work-around-command-0xfc05-tx-timeou.patch"
	"${_lucjan_fixes_path}/0006-readahead-correct-the-start-and-size-in-ondemand_rea.patch"
	"${_lucjan_fixes_path}/0007-x86-barrier-Do-not-serialize-MSR-accesses-on-AMD.patch"
	"${_lucjan_fixes_path}/0008-mm-Mark-nr_node_ids-__ro_after_init.patch"
	"${_lucjan_fixes_path}/0009-smp-Mark-nr_cpu_ids-__ro_after_init.patch"
	"${_lucjan_fixes_path}/0010-mm-nodemask-Use-nr_node_ids.patch"
	"${_lucjan_fixes_path}/0011-docs-Add-block-device-blkdev-LED-trigger-documentati.patch"
	"${_lucjan_fixes_path}/0012-leds-trigger-Add-block-device-LED-trigger.patch"
	"${_lucjan_fixes_path}/0013-leds-trigger-Adapt-blkdev_get_by_path-and-blkdev_put.patch"
	"${_lucjan_fixes_path}/0014-mm-slub-Optimize-slub-memory-usage.patch"
	"${_lucjan_fixes_path}/0015-x86-asm-bitops-Use-__builtin_clz-l-ll-to-evaluate-co.patch"
	"${_lucjan_fixes_path}/0016-modpost-Optimize-symbol-search-from-linear-to-binary.patch"

	# lucjan no longer includes separated clearlinux patches
	"${_clr_path}/0111-ipv4-tcp-allow-the-memory-tuning-for-tcp-to-go-a-lit.patch"
	"${_clr_path}/0112-init-wait-for-partition-and-retry-scan.patch"
	#"${_clr_path}/0113-print-fsync-count-for-bootchart.patch"
	"${_clr_path}/0116-migrate-some-systemd-defaults-to-the-kernel-defaults.patch"
	"${_clr_path}/0117-xattr-allow-setting-user.-attributes-on-symlinks-by-.patch"
	"${_clr_path}/0123-print-CPU-that-faults.patch"
	"${_clr_path}/0131-add-a-per-cpu-minimum-high-watermark-an-tune-batch-s.patch"
	"${_clr_path}/0161-ACPI-align-slab-buffers-for-improved-memory-performa.patch"

	"${_xanmod_path}/kconfig/0001-x86-kconfig-more-uarches-for-kernel-5.17-xm_rev3.patch"
	"${_xanmod_path}/kconfig/0002-XANMOD-Makefile-Move-ARM-and-x86-instruction-set-sel.patch"
	"${_xanmod_path}/binder/0001-binder-turn-into-module.patch"
	"${_xanmod_path}/binder/0002-binder-give-binder_alloc-its-own-debug-mask-file.patch"
	"${_xanmod_path}/binder/0003-wait-allow-to-use-__wake_up_pollfree-from-GPL-module.patch"
	"${_xanmod_path}/xanmod/0010-XANMOD-kconfig-add-500Hz-timer-interrupt-kernel-conf.patch"
	"${_xanmod_path}/xanmod/0011-XANMOD-dcache-cache_pressure-50-decreases-the-rate-a.patch"
	"${_xanmod_path}/xanmod/0012-XANMOD-mm-vmscan-vm_swappiness-30-decreases-the-amou.patch"
	"${_xanmod_path}/xanmod/0013-XANMOD-sched-autogroup-Add-kernel-parameter-and-conf.patch"

	# https://lore.kernel.org/amd-gfx/20210105220359.1392555-1-joshua@froggi.es/
	#"0000-drm-amdgpu-dont-limit-gtt-size-on-apus.patch::${_amdgfx_path}/20210105220359.1392555-1-${_joshie_s}/raw"

	# https://github.com/zen-kernel/zen-kernel/commits/6.6/zen-sauce
	"2001-ZEN-Add-VHBA-driver.patch::${_zen_gh}/98c9b99c3d9351380be5a9660f7d64c3cd9aec38.patch"
	"2002-ZEN-PCI-Add-Intel-remapped-NVMe-device-support.patch::${_zen_gh}/86da31dc0b4f191e8c2a75592b853799458113ea.patch"
	#"2003-ZEN-Initialize-ata-before-graphics.patch::${_zen_gh}/a1b7aab9dd867d77630444cbc3172247449e181c.patch"
	"2004-ZEN-Input-evdev-use-call_rcu-when-detaching-client.patch::${_zen_gh}/bb3cd4dee836e57d3bd5e6370c9c88df5f501638.patch"
	"2005-ZEN-cpufreq-Remove-schedutil-dependency-on-Intel-AMD.patch::${_zen_gh}/013af604fad9724cd00724d8a8893f1824642468.patch"
	"2006-ZEN-intel-pstate-Implement-enable-parameter.patch::${_zen_gh}/c00adbbc24b3fec41c0e56691b3ad39b7e919a07.patch"
	"2007-ZEN-Set-default-max-map-count-to-INT_MAX-5.patch::${_zen_gh}/d22e337dca65bd7056e27b93c212df25a9b4c376.patch"
	"2006-ZEN-mm-Stop-kswapd-early-when-nothings-waiting-for-i.patch::${_zen_gh}/5f726a5d1a1f3e5e8f9a932c20625bfff1902dcb.patch"
	"2008-ZEN-mm-Dont-hog-the-CPU-and-zone-lock-in-rmqueue_bul.patch::${_zen_gh}/b774e19c2b9336cecdbc4a38bbc1d2a6addd9143.patch"
	# https://github.com/zen-kernel/zen-kernel/commits/6.6/ksm
	#"2101-mm-expose-per-process-KSM-control-via-syscalls.patch::${_zen_gh}/d7c6cf799abaa15b7202a4237c311b1ac46e870a.patch"
	# https://github.com/zen-kernel/zen-kernel/commits/6.6/upstream-updates

	# https://gitlab.com/evlaV/linux-integration/-/commits/6.1/features/tcp-timewait/
	"0000-tcp-Also-use-tcp_fin_timeout-as-TCP-TIME_WAIT-time.patch::${_neptune_gl}/ef76035f50a1147a0d39b3d9c1b80b92a2961028.patch"

	# https://github.com/ROCm/ROCm/issues/2596#issuecomment-1775167987
	# https://lore.kernel.org/amd-gfx/5984374.lOV4Wx5bFT@daniel-desktop2/T/
	#"0000-Revert-drm-amdgpu-remove-vm-sanity-check-from-amdgpu.patch::${_amdgfx_path}/5984374.lOV4Wx5bFT@daniel-desktop2/raw"

	# https://gitlab.freedesktop.org/drm/amd/-/issues/2991
	# https://github.com/ROCm/ROCm/issues/2596
	# https://lore.kernel.org/amd-gfx/20240103043000.23971-1-ent3rm4n@gmail.com/
	"0000-Revert-drm-amdkfd-Relocate-TBA-TMA-to-opposite-side-.patch::${_amdgfx_path}/20240103043000.23971-1-ent3rm4n@gmail.com/raw"

	# The rest of the patches came from random git repositories or places around the web.
	# In my experience, random git repositories tend to vanish,
	# so instead of pulling the files from the repositories, they will be included in this one.

	# https://clbin.com/VCiYJ
	"0001-pcie-reset-kludge.patch"
	# https://aur.archlinux.org/cgit/aur.git/tree/amd-noflr.patch?h=linux-x570-vfio-openrgb-sm2262%2Bsm2263
	"0002-ryzen3-noflr.patch"
	# https://bugzilla.kernel.org/show_bug.cgi?id=202055
	# https://aur.archlinux.org/cgit/aur.git/tree/SM2262-SM2263.patch?h=linux-x570-vfio-openrgb-sm2262%2bsm2263
	"0003-sm2262-sm2263-noflr.patch"

	# dropped by lucjan and ZEN
	# https://gitlab.com/sirlucjan/kernel-patches/-/tree/b4af42f0a6f490c5129cbd27b6b8132f55fd9179/5.18/lqx-patches-v2-sep
	"0001-zen-Allow-MSR-writes-by-default.patch"

	# dropped by lucjan
	# https://gitlab.com/sirlucjan/kernel-patches/-/tree/b4af42f0a6f490c5129cbd27b6b8132f55fd9179/5.18/ll-patches
	"0005-mm-set-8-megabytes-for-address_space-level-file-read.patch"

	# WRITE_WATCH support for wine
	# https://github.com/Frogging-Family/linux-tkg/tree/master/linux-tkg-patches/6.6
	"0001-mm-Support-soft-dirty-flag-reset-for-VA-range.patch"
	"0002-mm-Support-soft-dirty-flag-read-with-reset.patch"

	# the main kernel config files
	'config'
)

########################
## For consideration: ##
########################
#
# iwlwifi: Make missed beacon timeout configurable
# https://bugzilla.kernel.org/show_bug.cgi?id=203709
# https://lore.kernel.org/linux-wireless/20220226045047.643695-1-mikezackles@gmail.com/
#
# iwlwifi: mvm: extend session protection on association (Potential alternative to above)
# https://git.kernel.org/pub/scm/linux/kernel/git/iwlwifi/backport-iwlwifi.git/commit/?id=53faa7fb4f69b2e28495b05e0a8bae7bcf47d60e
#
# mm, thp: add new defer+madvise defrag option ; background reclaim of hugepages
# https://lwn.net/Articles/711248/
# https://github.com/zen-kernel/zen-kernel/commit/d7406fe7e75e1fe31e6b16474fb76f99e2c5926c
#
# Collapse huge page on same numa node
# https://patchwork.kernel.org/project/linux-mm/patch/20220311090119.2412738-1-maobibo@loongson.cn/
#
# Don't OOM reap a process with a futex robust list
# https://patchwork.kernel.org/project/linux-mm/patch/20220309002550.103786-1-npache@redhat.com/
#
# NUMA patches in clearlinux patches repo
# https://github.com/clearlinux-pkgs/linux
#
# Audio hardware fixes
# https://bugzilla.kernel.org/show_bug.cgi?id=216500
#
# re-add ashmem (or maybe dkms module?)
#
# userfaultfd move option
# https://lore.kernel.org/all/20231028003819.652322-1-surenb@google.com/
#
# mm/ksm: add fork-exec support for prctl
# https://lore.kernel.org/lkml/20230922211141.320789-1-shr@devkernel.io/
#
# Smart scanning mode for KSM
# https://lore.kernel.org/lkml/20230927162222.3827551-1-shr@devkernel.io/
#
# mm/ksm: Add ksm advisor
# https://lore.kernel.org/lkml/20231028000945.2428830-1-shr@devkernel.io/
#
# mm: Fix for negative counter: nr_file_hugepages
# https://lore.kernel.org/lkml/20231107181805.4188397-1-shr@devkernel.io/
#
# Handle more faults under the VMA lock
# https://lore.kernel.org/all/20231006195318.4087158-1-willy@infradead.org/
#
# https://www.phoronix.com/news/Linux-6.7-x86-cpu-AMD-SVM
# https://www.phoronix.com/news/AMD-More-Seamless-Boot
# https://www.phoronix.com/news/VirtIO-Vsock-MSG-Zerocopy
# https://www.phoronix.com/news/MSI-EC-Linux-Cooler-Boost
# https://www.phoronix.com/news/AMD-Linux-Fix-SR-Wakeups
# https://www.phoronix.com/news/Linux-6.8-AMD-No-Serialize-MSR
#
# lucjan patchsets:
# ext4-dev
# kbuild-dev
# maple-lru
# uksmd/uksmd-futex-dev
# v4l2loopback
# le9uo

######################
## For observation: ##
######################
#
# SteamOS kernel
# https://gitlab.com/evlaV/linux-integration
#
# Multi-threaded VFIO page-pinning
# https://www.phoronix.com/scan.php?page=news_item&px=VFIO-Multi-Thread-Pinning
# https://lore.kernel.org/lkml/20220106004656.126790-1-daniel.m.jordan@oracle.com/
#
# Process Adaptive autoNUMA
# https://www.phoronix.com/scan.php?page=news_item&px=AMD-PAN-Linux-RFC
# https://lore.kernel.org/lkml/20220128052851.17162-1-bharata@amd.com/
#
# Everything this person submits (amd vm stuff)
# https://lore.kernel.org/lkml/?q=suravee.suthikulpanit%40amd.com
#
# Parallel CPU bringup issues with early Zen CPUs
# https://www.phoronix.com/scan.php?page=news_item&px=Parallel-CPU-Bringup-AMD-Snag
#
# eBPF in HID subsystem
# https://www.phoronix.com/scan.php?page=news_item&px=HID-eBPF-New-Attempt
#
# FDRAWCMD removal (revert once it's done)
# https://github.com/torvalds/linux/blob/master/drivers/block/floppy.c
#
# le9
# https://github.com/hakavlad/le9-patch
# https://github.com/hakavlad/disable-i915-gem-shrinker

# Formatting of hashes is different because I copy-paste from makepkg --geninteg
sha512sums=('c1598bb1116528525004a677e571117d2b5156cf8f60c84f73e11d9010032b1fd5aaf8e5d286679019db55abb699c2f55de2dbb332c0a96f6337eebd56220863'
            'SKIP'
            'cbd648d5f3022f9378b6bc7ac25bc6017d8feddd42b046dab98853118444bab3754abde5e42ea900a8a70e08f0f1b4366683020ed26953db97a6fb4fb6e59cd3'
            'acc8a21a4377f7ac63bd2ff38aa61435e5cb4c004fdd903bb6c7be1432cc49aa309222fc7e816bf994fb3cbec4a43d57f63ed0a05b59ebaa5eab1fd968c5693f'
            'd9c02a55dbc79c4a87deb54a64e89d8bc4c439502f9d6cf8ae0d7f2dded5d875a2e472f5f932043d54bbcbf78465eb33776a064350c5fbf04c1eb4563bdd9827'
            '6a64c8a5aa2b9fa28df4b8af8e82545e2302b0ffd40644909721ccbd093d48d284ec8e49c587e594548179ae39a5802b3e4be9616d8e3949d2bd3ce16d4e8f79'
            'fc54477fdd115b905bcc2eaf1d1ddcca5007172e7df421c16afa975a71fb5f606d2f06f25e4a6cfd430fe5fe8ff9c15f2e4b14c06f8426c8853e5703f5b4816a'
            'a4c46f39533c0b60b8529a581d81c730760b2926d63ab312963f5afadfe97f48bea73aeeab5bc53339eaad23c1a8528382d098261d95fa9f112b1ddeb0133574'
            '205f3a3bfc49733aa7537846ed1229f2803c32119048f58d748a357e775e8c59922ea7de5a342c497dd6a31874e21cee9bc8e5803d53c2e068ef57a65e658c02'
            'c7fe9886191676496db061217c8083b6b94178153643217f4b7ee5f77f6983ab99adf7d118a95800019318a1f71c5d1d18a81a7104895a343dbad9d8c8872bd5'
            'd721c7709f4d0358da1f6e83576f49b6c512f4a7b930e7bc5544c671d1b1f87055dda1e6b68e14a805124849ea5b0b8ed7771e744326fa4de3c9061c1ec9407c'
            '07c17066c523749172af8cb37952ce42e8c5110cd5694c4b96b7f4ecc22f129eb27de217915929b3bb7ed5d2c1f3f133c602a6a70b0ac402b4bb23f9e746daf7'
            '968560ceaf3f839c4d3b178432cce3e01ba39a7d59c66f1495307f3171e7362d7b40f53c6cbf591d843715b359a84b95c0998d6bad1ddd5a7afa8dceb4ce33b2'
            '6b0ba98376e053d8a15a3df74d2fc23656e00a05d73373313e43a97c088f60c2fd05d577799a16b4eeb0baa989fc88ee9fed17407134a09dd847ca2f296d1f3c'
            'd5971ec5c854c442052271ff2990b0ee9332d3d7547ceae51aa1e29bf4781ba8b29b5849f32a58f9100674ce86132fe01c59ffcfd6f13569293612f2150813ba'
            '6ad235192aba154b650e1b41f72c6864bd5da4c01c07ce72288f472c1fe441da78d73b0e5dc7384ff0959e0948403d419f909630b36d6e6bc06bf808583776fe'
            '0e77dbadbd8d2942a459b3d6f30ff3dd2125e4870d30f6d17c308abc59b6345249b390676181a9044032c62e2bc03efdc4cb2c73baef10e9aa9362df5f169ba1'
            'dd9a24343dbdce97ed9ef0ec954f8c5ab7e88227c6aadde2bbd797a986a7ae998ad9e3bb53816d78a187013713a22ed9d28933d5134c2a3d0966bf0e0c681a55'
            '18bc6b0f5549a8c8c921250bfd5ef8a9ff4c398f2a53f84ab4503e337c67715bd1617bf9f2e6b0ac1ee37868959c11579bd8d5575b03fa157e6833f880907253'
            '07d776eee9b00461a18ea4bcab185cc8e39213998ca13d07db5a1a175d515cc0b5e98798711ea18a68bdf1b4535bd4fc2cdfe7bfd5e9a62df78d431c3ee77f99'
            '1051044810fec04f5ca3ede7cac14766c65bb38ba72721fd56ad338a96a334efaf022ab39bc760bedacdebc89fc83636582f6e86c9d94730c7fc659206d6d271'
            '2ff344548df36e704ae3cbc54654fa5194023bf48099b5283d37fa87022a71590c703a633f1b3c301d32a90e4830c1ad76af36b98f3292bbbecbd63ac8d6f3a7'
            '1eadfdbf72f62734aa84382e3bd07167ddf9d5a58e65d9d762dd4a2b03818c4881e433bf88360f9803c6649f130c9c406c1805b998ee2b69b2d9ed57aa69b5da'
            'b8ede0ef5e64fe8dd9bed886a820793f764690612b061d4e3cc0132b976108fc3c80c3c3f361b5c34628ad8e4ab9163dd54f216b3109a8c260354dc3f4aa4597'
            '369d3f7267cf45a59021a67b7f47721792dc7d21bad5fa4054729802a42fe53d795210e305288bcf8a9039437baa6aa2e650f2354b50d6f69c0fb0b41e3b7b57'
            'd080960f673f8d10a620461c1a2604fde3293cf603a3423847bf9d7b1512d2c805f95f1326be346f1e035a7bc0b5fd53b5d8ba7e9801266efbc8b5242c8fb0c3'
            'ff3a3a26e04fd04aaed0b13c13c3663a1a07ebe839601fa40fafe71dbbe24bafd176b8f050b179b5cd6c2778bbf4bd4c354cd52523ea132741fb2d3aaf800167'
            '8123eba11eccd1f630268fad1b73ce596dfd6550720a94489bc333ff055d5e35557c44eb8be1c97b6e149a15378aec8ebc5fbefcf6dc151f26e5bdcad205851e'
            '5b4e6460adc058c621a90e928dfca9337295ccd0a39ac84a2e62af431f1fb697d622f813cedf018d530fb6f4597eedfdec16d0c3b0164f444d3d6b7b4b5fe16e'
            'acc989cde2aa58a8a65b75b35c43c3f737d60ef9d3ee6b0290fdb4638dbed3665aa9b7cd46cafad892f68b206cfc602189a19b513878e2854e1ea3c84b761770'
            'e04d99308736bd890d8188e146f94a3459542edbae2d99c0998a3f4aa4633ef587a07e278f9f46f1b7cf17d8339b5717c0919336ee7a68d1d5593675b7e5b714'
            'c8756c07fb0502c00c9344ae6bb67d9419a11dfd6d338dc2b5c8c85b0ba00c9b13d4b416bdc6600025a4d789ba43965138d6dfa5f53559d1772196f487e5f66f'
            '1529220267695b7945b791663f7b5230d8058ed1e59d09ae03a7682696d4afdad04bdce6df2540c7e7afdf4e3962e67ee9e43c6b17c5f0ec6d7a67347dd2341d'
            'aa0f797eedb103169910943bafa95844da5f4af9adafb913d37b85b816bedded1e1f87905f724a8ecf5fd8617db4d4fd5c5e4d7edfd80feec736d14346bc3cdb'
            '45102fb3d99771ee8739f0cc9640e59570432850686f0b0856c5de4a57ccf096f23a8180b5284129aa6347243c865c67edea15e263d53f257dbb09bfc3511789'
            'bc2ff90f2a15fff0ffefa21690f342bf1c0a2ab721e434d6e458461986ff47d64ec20e4cfee348061073f75be905d6704a854817bc800a352f54fffc1d55460b'
            '899d3518f45c172af2d28655190b0d081ce570991f05a20b9f697a2bb98b96c6bee824cddf1534881c62e367a2ce36a149f8e68ef2894ff785137da6ad192fc3'
            '4344c504d42e479a81c5236274f7baaa5c6126b0e5d92e7c5072ff8af0d3c3b3ea47eeece55101575b8e749a47c0fab4189a56dba023f528bd92d15da3ae87d3'
            '7d6baa63a22873447ceb265a40d44e43cbf48f3026de897898e404f174ea27ad9d1a768827778566175c969b5a59ba7604037387e194a503c0cbafbcd17a0bbd'
            'f6c3ab5abf2d584ec9b4317a4a9574a7d71e1cd4de46c2722269ace5dd55ba36aec557cafd10d100dc2f8a2c0a21fa3906953880687a61f097eda3cd19c166e9'
            '8c73a63e54c675dda53b2d180373fff15ac6f7d8343d52e359452767d940ac51ab487a8a01f7366c8a254bb37e3c681e4a22012cac11585decd4d9a6530d5119'
            '7b71648157047dddc7a43b717c51fc6d3397fafc8dc8dcc7631b292b0b664c0d24d99b8920918dee623e2a12405d4b02b168520bb889b52ae79652a1993fb473'
            'aed3d1010607f9b35d1c836bac0cd2b0cfb7f572efb2baa2610b7777415f99a6a74a797adbe76b48c3eaf4f7d59cead07da2c3055a0b01b834efb1007b24a693'
            '8a53deaf73a1fa8f7d68737a1ab446c18c73b1b1bb3e5eaec6ff39240eed1e76ed017504f180052e8ec7ccc26fc7f673ed5ddae2b1dc9f89b85288bbe54357bf'
            'b88a71cbd2e9dab707312ad4108681b67f17e95c8962a6a4868392475483aa4e8d05673f97965ce1901162364235d69d7fa8888365e72f7514bc9cc5eba5e190'
            'ead629b352126972268e96e6f0b34b558b96fbc9d0efbb7b6c560671fe61c97272492509f190b682c2b7db0da485886a941f58a502d72095c208e492f2f4ccd0'
            '60c6cb60e31b64be1fe99d8844b4a92b7018b237320e458a124f209da4828a60adc5df942d4d6090f68a5eb8866a1b5193441e6bc9ca4e94a757784e0909a750'
            'abd9e26d870848a12a274ffef19ff1ab495404c4e1787c0c07ce54eac2a1929698ee52c7ad6d0d17cd1d18dc53d7a40ee3acff911529a7d21951f351e2648bcc'
            'eed111149b697e0725f803559096f9328b3b95c04a3cedcca8b718b12699ffa5ad0c9b74fecf8acbed66b06de6ea56c2f130d79a6b67e15bd2a748e10182443f'
            '2061d716fd95efe7fc9b4d10a339a675b9cd05f7be77b33ceff31f70ad0179ccd0cc4ad7b51c60b0bec2fb645d6458f32a29c3e71614213e177bfec404ff30f5'
            '33b4b9257fd559b73455727602be4f2d3cddf6d9648da72ead1e2794a61a624e8c46d630548fcb63ea53c3614ddb2ff8a563d61e70b9bb0cc84d0f111d5618de'
            '29f42df0b94d44bf02de0a42e01e0e25bf37b8c6d48a7c179f53fc6e16dac0bd5fdedcdfab889ec2b418d665ac6b060c739374ab2cb27ab0e7d87073e70c61d8'
            'ed5e6eb679716c340aab5642cad9fee3844288ce37756c47d93621bf49b0356d99db2536587c552324a82371d9840f4fc7b586cecc6e45a7680559d1c2fbf31c'
            'ee9b9c204c6b5d82b0c48df6442ae53218d4a76c27cdc80d0896685fdcae307bd59506b46b7cb1feb2e13c476bbe0b0ff8510284033c2c1d2228e64755bf8159'
            '324ddcd042edfea062a07abf12b9512ea93affe16d34740a54840a6333e5dd8773ff1732df94f258bb5546d98e24adbd365d41a350809b1cb278bcbfef30addc'
            '72495e02ce42b4ba2ad9cabe48e2f8ab5a6515c1439fc811fbc3e090c1f1761f965040633dc4903749adf9ce2138f4a12a41eb51eabcd7a1618f5da528aa76fb'
            '3fad7b808669a18f71c09cb3581ead1e859642af681d0678e89a2c3863274439fb7c8e6c869100cf2724052fd14f849731627ff0fad893270055f16f6d0b95c3'
            '6ffc204c7ba8ae540fcd5871d7ddbaf37c2e91708945beac44ff9696a75f0e89b2e7fa3dc435c3e8cf2e07e6642575733ac1ca997dd0a6ab5312c5939b440140'
            'c0af33a47b4a7048c027ac268acf570f0ec1dc30460bbbae13cbdb681cd7c5338ee3eed2f19c827a342a4b1417e2c83aeb8540c406292da9f5c9f889ddc583cd'
            'c142a2a9644c77fef758233ba9f9da3c06da0fdbe0abd52de66fd3bac0840d50c4112a4bea7f2217b83a770c27c9b85fdce0b200f0bd69729f8d2ec9c723937f'
            'b577917d235cc61e704277bcafe69e7139d92b9e4c024286b7671bed8874981465e0ebbcd5cf776578083dddf991291081dc52acc04d5ce0f0828ca8f08d0d18'
            'da3ed348ecc9dca6459d3ce1ca4eaaa5f066c4b8a7cb4cde3f86a47a8a93f2384b1343b88e06fa0555b4fa3417e6032141c12d5f859ec89e3d5b29a1159a9a3c'
            'd00874f9e3ad30b8b44fb3c7c26641c69d674bfb0ffceb7daa23eed21943b2034aba6df13af2a647dcf30e9ec515f2dd17744dc42bb8700f3ff20eb75af55408'
            'c03499549a3c3a80b4b383da9529e0bee7dc72c1c8e42f0bffb2be2a14d131a356e478be6f67a98f866632d1d83519524bbc303c5453e95fd76e6b076ad5c395'
            '4624dc95fb7612cb44adca950b339da0738920cf10e5e5f4452eb12b71462b5444a1b4b8b039767743cf8e7e9361f3d9c75e3ec2f294d0e52db685cc3bb99ac7'
            'caacb4498ebe54b99af07c62d74bc0fb83c36005432eff86f0fccdb28597c37e1dd9101dc69e26b90fa7bf231a0b9e57a6ca20d98df8f10234dee0b7abb917da'
            'a80d597776512853018aba5e58509538214fef8ba49c5309cfef81b6ccdfa9e30c443b608a1a3f3b81dbd5eabde2270fb779e78aa8a432b2abbf27130af4f282'
            '259f2876215fa8edd08c6bea91321de0dccf78d6128d0ebabd9df70fdcfcbe7c52677679bb0e5a25de8eb0e5f8b91478c173a1480e49e86bbdc4222d1d0c34a9'
            'fbc98da3c3d92689905c12869a9c48ed548c625a8adb05a00ac0ef88a3765803e018afe9e07489a8e1760c755f9d76b28f00202f2f7b45cd41c1f4c05a933d3d'
            '310654b8bb11aa1af48d6fae21d0c6bcfe9f06c27828274c5749d0ab0d759e77441e8b5323b8c6665b23161c9d35c4a9743948cc1b474deb3b1d2c98752cbd97'
            '87f951227a2693ae3ba0b191e24667c073889f0a5c534439884cbcb61bf3a371465bc26300d6c36b716459fa9b0ba1db4dedb77d7dc9f724c80a308266161246'
            '540cd6bdc2483a50687fe5fde1b48a32940c440032f82eaa33f2b0b1a546a462c7d8d8e4beee69f7cf51db5631beb310f9965793fac6f7a75971fa8dd6cc4e32'
            '532f8e57a702f582273d06dedfd4d7b4ebe9f1fc7d05a2051f5a6cc0ecd51d7baa0d95812ef6ffde68817ef841a1905222ef06020e8cd23d3a58fa78b1a29eea'
            '5d6bc1a1552a7179a5f33445ac63e75add59653c3fd2175daeaa0b609576c98fd01ef856e9e35bfd91f20db933304463031d64faee2153616958603a63018755'
            '856296070c06301c5fbe8ab874ef6f6e1b5ee258e0b84bbc90eddff4814400f3bf6804a83d232afb69328f4061ee30a34ed4b3af34a024b74e46951bf1581cee'
            'b023a63a03a3935d83e92a7dfed7629c29dbf7d800000d7fe640e763b1a9325730b92406d69e420d4890be9184e5714aa1504f22f507d9287fcd519c27d6511a'
            '77bbe7362f896572102d8f464bce03fb899a8fc5d854f84879d5fc367c8f6589c4ea9dbc57c0cbf53b5ba5e186d00e587e4daf79d69beaf2d8758e7557cb3ce4')

export KBUILD_BUILD_HOST=archlinux
export KBUILD_BUILD_USER=$pkgbase
export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"

_aug_colorize() {
	# prefer terminal safe colored and bold text when tput is supported
	if tput setaf 0 &>/dev/null; then
		_MAGENTA="${BOLD}$(tput setaf 5)"
		_CYAN="${BOLD}$(tput setaf 6)"
	else
		_MAGENTA="${BOLD}\e[35m"
		_CYAN="${BOLD}\e[36m"
	fi
}

_msg3() {
	(( QUIET )) && return
	local mesg=$1; shift
	printf "${_MAGENTA}   +-${ALL_OFF}${BOLD} ${mesg}${ALL_OFF}\n" "$@"
}

prepare() {
	_aug_colorize

	cd $_srcname

	### Setting version
		msg2 "Setting version..."
		sed -e "/^EXTRAVERSION =/s/=.*/=/" -i Makefile
		#scripts/setlocalversion --save-scmversion
		echo "-$pkgrel" > localversion.10-pkgrel
		echo "${pkgbase#linux}" > localversion.20-pkgname

	### Patching sources
		local src
		for src in "${source[@]}"; do
			src="${src%%::*}"
			src="${src##*/}"
			src="${src%.zst}"
			[[ $src = *.patch ]] || continue
		msg2 "Applying patch $src..."
		patch -Np1 < "../$src"
		done

	### Setting config
		msg2 "Setting config..."
		cp ../config .config

	### some initial configuration
		# Enable raw floppy commands
		scripts/config --enable CONFIG_BLK_DEV_FD_RAWCMD
		# (we start with the arch config as a base so I can keep track of stuff easier)
		scripts/config --undefine CONFIG_LOCALVERSION_AUTO
		scripts/config --enable CONFIG_LZ4HC_COMPRESS
		# from patches
		scripts/config --enable CONFIG_FUTEX2
		scripts/config --enable CONFIG_VHBA

	### for debugging
	### https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=0aaa8977acbf3996d351f51b3b15295943092f63
		# prink and demesg options
		scripts/config --enable CONFIG_DEBUG_BUGVERBOSE
		scripts/config --enable CONFIG_DYNAMIC_DEBUG
		scripts/config --enable CONFIG_PRINTK_CALLER
		scripts/config --enable CONFIG_PRINTK_TIME
		scripts/config --enable CONFIG_SYMBOLIC_ERRNAME
		# Compile-time checks and compiler options
		scripts/config --enable CONFIG_DEBUG_INFO
		scripts/config --enable CONFIG_DEBUG_SECTION_MISMATCH
		scripts/config --set-val CONFIG_FRAME_WARN 2048
		scripts/config --enable CONFIG_SECTION_MISMATCH_WARN_ONLY
		# Generic Kernel Debugging Instruments
		scripts/config --enable CONFIG_DEBUG_FS
		scripts/config --enable CONFIG_DEBUG_FS_ALLOW_ALL
		scripts/config --enable CONFIG_DEBUG_IRQFLAGS
		if [ -n "$_use_ubsan" ]; then
			scripts/config --enable CONFIG_UBSAN
			scripts/config --enable CONFIG_UBSAN_BOOL
			scripts/config --enable CONFIG_UBSAN_BOUNDS
			scripts/config --enable CONFIG_UBSAN_ENUM
			scripts/config --enable CONFIG_UBSAN_SHIFT
			scripts/config --enable CONFIG_UBSAN_UNREACHABLE
			scripts/config --undefine CONFIG_UBSAN_ALIGNMENT
			scripts/config --undefine CONFIG_UBSAN_DIV_ZERO
			scripts/config --undefine CONFIG_UBSAN_TRAP
		fi
		scripts/config --undefine CONFIG_WARN_ALL_UNSEEDED_RANDOM
		# Memory Debugging
		if [ -n "$_kmem_debug" ]; then
			scripts/config --enable CONFIG_PAGE_EXTENSION
			scripts/config --enable CONFIG_PAGE_OWNER
			scripts/config --enable CONFIG_DEBUG_KMEMLEAK
			scripts/config --enable CONFIG_DEBUG_KMEMLEAK_AUTO_SCAN
			scripts/config --enable CONFIG_DEBUG_OBJECTS
			scripts/config --set-val CONFIG_DEBUG_OBJECTS_ENABLE_DEFAULT 1
			scripts/config --enable CONFIG_DEBUG_OBJECTS_FREE
			scripts/config --enable CONFIG_DEBUG_OBJECTS_PERCPU_COUNTER
			scripts/config --enable CONFIG_DEBUG_OBJECTS_RCU_HEAD
			scripts/config --enable CONFIG_DEBUG_OBJECTS_TIMERS
			scripts/config --enable CONFIG_DEBUG_OBJECTS_WORK
			scripts/config --enable CONFIG_DEBUG_PER_CPU_MAPS
			scripts/config --enable CONFIG_DEBUG_STACK_USAGE
			scripts/config --enable CONFIG_DEBUG_VIRTUAL
			scripts/config --enable CONFIG_DEBUG_VM
			scripts/config --enable CONFIG_DEBUG_VM_PGFLAGS
			scripts/config --enable CONFIG_DEBUG_VM_RB
			scripts/config --enable CONFIG_DEBUG_VM_VMACACHE
			scripts/config --enable CONFIG_GENERIC_PTDUMP
			scripts/config --enable CONFIG_KASAN
			scripts/config --enable CONFIG_KASAN_GENERIC
			scripts/config --enable CONFIG_KASAN_INLINE
			scripts/config --enable CONFIG_KASAN_VMALLOC
			scripts/config --enable CONFIG_PTDUMP_DEBUGFS
			scripts/config --enable CONFIG_SCHED_STACK_END_CHECK
			scripts/config --enable CONFIG_SLUB_DEBUG_ON
			scripts/config --undefine CONFIG_DEBUG_PAGEALLOC
			scripts/config --undefine CONFIG_DEBUG_KMEMLEAK_DEFAULT_OFF
			scripts/config --undefine CONFIG_DEBUG_RODATA_TEST
			scripts/config --undefine CONFIG_DEBUG_WX
			scripts/config --undefine CONFIG_KFENCE
			scripts/config --undefine CONFIG_PAGE_POISONING
			scripts/config --undefine CONFIG_SLUB_STATS
		fi
		# Debug Oops, Lockups and Hangs
		scripts/config --enable CONFIG_DEBUG_ATOMIC_SLEEP
		scripts/config --enable CONFIG_DETECT_HUNG_TASK
		#scripts/config --enable CONFIG_PANIC_ON_OOPS
		scripts/config --set-val CONFIG_PANIC_TIMEOUT 0
		scripts/config --enable CONFIG_SOFTLOCKUP_DETECTOR
		scripts/config --undefine CONFIG_BOOTPARAM_HUNG_TASK_PANIC
		scripts/config --undefine CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC
		# Lock Debugging (spinlocks, mutexes, etc...)
		if [ -n "$_tlock_debug" ]; then
			scripts/config --enable CONFIG_PROVE_LOCKING
			scripts/config --undefine CONFIG_PROVE_RAW_LOCK_NESTING
		fi
		# Debug kernel data structures
		if [ -n "$_kmem_debug" ]; then
			scripts/config --enable CONFIG_BUG_ON_DATA_CORRUPTION
		fi
		# RCU Debugging
		if [ -n "$_tlock_debug" ]; then
			scripts/config --enable CONFIG_PROVE_RCU
			scripts/config --enable CONFIG_PROVE_RCU_LIST
		fi
		# Tracers
		scripts/config --enable CONFIG_BRANCH_PROFILE_NONE
		scripts/config --enable CONFIG_DYNAMIC_FTRACE
		scripts/config --enable CONFIG_FTRACE
		scripts/config --enable CONFIG_FUNCTION_TRACER
		# stuff I added
		scripts/config --enable CONFIG_CRASH_DUMP
		scripts/config --enable CONFIG_PROC_VMCORE

	### Better stack traces
		scripts/config --enable CONFIG_STACK_VALIDATION

	### vendor-reset compat
		scripts/config --enable CONFIG_FTRACE
		scripts/config --enable CONFIG_KPROBES
		scripts/config --enable CONFIG_PCI_QUIRKS
		scripts/config --enable CONFIG_KALLSYMS
		scripts/config --enable CONFIG_KALLSYMS_ALL
		scripts/config --enable CONFIG_FUNCTION_TRACER

	### CPU optimization
		# I want to be able to slap an HDD with this kernel on it in just about any machine
		# I'm very, very unlikely to encounter any CPUs older than AMD K8
		scripts/config --enable CONFIG_MK8SSE3
		scripts/config --undefine CONFIG_GENERIC_CPU
		# I'd add an -mtune=znver1 if I could

	### NTFS3
		scripts/config --module CONFIG_NTFS3_FS
		scripts/config --disable NTFS3_64BIT_CLUSTER
		scripts/config --enable NTFS3_LZX_XPRESS
		scripts/config --disable NTFS3_FS_POSIX_ACL

	### Android stuff
		scripts/config --enable CONFIG_ANDROID
		scripts/config --enable CONFIG_ANDROID_BINDER_IPC
		scripts/config --enable CONFIG_ANDROID_BINDERFS
		scripts/config --set-str CONFIG_ANDROID_BINDER_DEVICES "binder,hwbinder,vndbinder"
		#scripts/config --set-str CONFIG_ANDROID_BINDER_DEVICES "binder,hwbinder,vndbinder,binderfs"

	### Switch controller drivers
		scripts/config --module CONFIG_HID_NINTENDO
		scripts/config --enable CONFIG_NINTENDO_FF

	### mgLRU stuff
		scripts/config --enable CONFIG_LRU_GEN
		scripts/config --enable CONFIG_LRU_GEN_ENABLED

	### le9-patch values
		scripts/config --set-val CONFIG_ANON_MIN_KBYTES 0
		scripts/config --set-val CONFIG_CLEAN_LOW_KBYTES 262144
		scripts/config --set-val CONFIG_CLEAN_MIN_KBYTES 0

	## Fill in remaining defaults
		make olddefconfig
		diff -u ../config .config || :

	### Prepared version
		make -s kernelrelease > version
		echo "Prepared $pkgbase version $(<version)"

	### Optionally use running kernel's config
	# code originally by nous; http://aur.archlinux.org/packages.php?ID=40191
	if [ -n "$_use_current" ]; then
		if [[ -s /proc/config.gz ]]; then
			_msg3 "Extracting config from /proc/config.gz..."
			# modprobe configs
			zcat /proc/config.gz > ./.config
		else
			warning "Your kernel was not compiled with IKCONFIG_PROC!"
			warning "You cannot read the current config!"
			warning "Aborting!"
			exit
		fi
	fi

	### Optionally set tickrate to 1000
	if [ -n "$_1k_HZ_ticks" ]; then
		_msg3 "Setting tick rate to 1k..."
			scripts/config --disable CONFIG_HZ_300
			scripts/config --enable CONFIG_HZ_1000
			scripts/config --set-val CONFIG_HZ 1000
	fi

	### Optionally disable NUMA for 64-bit kernels only
		# (x86 kernels do not support NUMA)
		if [ -n "$_NUMAdisable" ]; then
			_msg3 "Disabling NUMA from kernel config..."
			scripts/config --disable CONFIG_NUMA
		fi

	### Optionally load needed modules for the make localmodconfig
		# See https://aur.archlinux.org/packages/modprobed-db
		if [ -n "$_localmodcfg" ]; then
			if [ -f $HOME/.config/modprobed.db ]; then
			_msg3 "Running Steven Rostedt's make localmodconfig now"
			make LSMOD=$HOME/.config/modprobed.db localmodconfig
		else
			error "No modprobed.db data found"
			exit
			fi
		fi


	### Running make nconfig
	[[ -z "$_makenconfig" ]] || make nconfig

	### Running make menuconfig
	[[ -z "$_makemenuconfig" ]] || make menuconfig

	### Running make xconfig
	[[ -z "$_makexconfig" ]] || make xconfig

	### Running make gconfig
	[[ -z "$_makegconfig" ]] || make gconfig

	### Save configuration for later reuse
	cat .config > "${startdir}/config.last"
}

build() {
	cd $_srcname

	make all
	make htmldocs
}

_package() {
	pkgdesc="The $pkgdesc kernel and modules"
	depends=(
		coreutils
		kmod
		initramfs
	)
	optdepends=(
		'wireless-regdb: to set the correct wireless channels of your country'
		'linux-firmware: firmware images needed for some devices'
		'modprobed-db: Keeps track of EVERY kernel module that has ever been probed - useful for those of us who make localmodconfig'
	)
	provides=(
		VHBA-MODULE
		VIRTUALBOX-GUEST-MODULES
		WIREGUARD-MODULE
		KSMBD-MODULE
	)

	cd $_srcname
	local modulesdir="$pkgdir/usr/lib/modules/$(<version)"

	msg2 "Installing boot image..."
	# systemd expects to find the kernel here to allow hibernation
	# https://github.com/systemd/systemd/commit/edda44605f06a41fb86b7ab8128dcf99161d2344
	install -Dm644 "$(make -s image_name)" "$modulesdir/vmlinuz"

	# Used by mkinitcpio to name the kernel
	echo "$pkgbase" | install -Dm644 /dev/stdin "$modulesdir/pkgbase"

	msg2 "Installing modules..."
	ZSTD_CLEVEL=19 make INSTALL_MOD_PATH="$pkgdir/usr" INSTALL_MOD_STRIP=1 \
		DEPMOD=/doesnt/exist modules_install  # Suppress depmod

	## remove build and source links
	#rm "$modulesdir"/{source,build}
	# remove build link
	rm "$modulesdir"/build
}

_package-headers() {
	_aug_colorize

	pkgdesc="Headers and scripts for building modules for the $pkgdesc kernel"
	depends=("$pkgbase" 'pahole')

	cd $_srcname
	local builddir="$pkgdir/usr/lib/modules/$(<version)/build"

	msg2 "Installing build files..."
	install -Dt "$builddir" -m644 .config Makefile Module.symvers System.map \
		localversion.* version vmlinux
	install -Dt "$builddir/kernel" -m644 kernel/Makefile
	install -Dt "$builddir/arch/x86" -m644 arch/x86/Makefile
	cp -t "$builddir" -a scripts

	# required when STACK_VALIDATION is enabled
	install -Dt "$builddir/tools/objtool" tools/objtool/objtool

	# required when DEBUG_INFO_BTF_MODULES is enabled
	install -Dt "$builddir/tools/bpf/resolve_btfids" tools/bpf/resolve_btfids/resolve_btfids

	# add xfs and shmem for aufs building
	mkdir -p "$builddir"/{fs/xfs,mm}

	msg2 "Installing headers..."
	cp -t "$builddir" -a include
	cp -t "$builddir/arch/x86" -a arch/x86/include
	install -Dt "$builddir/arch/x86/kernel" -m644 arch/x86/kernel/asm-offsets.s

	install -Dt "$builddir/drivers/md" -m644 drivers/md/*.h
	install -Dt "$builddir/net/mac80211" -m644 net/mac80211/*.h

	# https://bugs.archlinux.org/task/13146
	install -Dt "$builddir/drivers/media/i2c" -m644 drivers/media/i2c/msp3400-driver.h

	# https://bugs.archlinux.org/task/20402
	install -Dt "$builddir/drivers/media/usb/dvb-usb" -m644 drivers/media/usb/dvb-usb/*.h
	install -Dt "$builddir/drivers/media/dvb-frontends" -m644 drivers/media/dvb-frontends/*.h
	install -Dt "$builddir/drivers/media/tuners" -m644 drivers/media/tuners/*.h

	# https://bugs.archlinux.org/task/71392
	install -Dt "$builddir/drivers/iio/common/hid-sensors" -m644 drivers/iio/common/hid-sensors/*.h

	msg2 "Installing KConfig files..."
	find . -name 'Kconfig*' -exec install -Dm644 {} "$builddir/{}" \;

	msg2 "Removing unneeded architectures..."
	local arch
	for arch in "$builddir"/arch/*/; do
		[[ $arch = */x86/ ]] && continue
		_msg3 "Removing $(basename "$arch")"
		rm -r "$arch"
	done

	msg2 "Removing documentation..."
	rm -r "$builddir/Documentation"

	msg2 "Removing broken symlinks..."
	find -L "$builddir" -type l -printf 'Removing %P\n' -delete

	msg2 "Removing loose objects..."
	find "$builddir" -type f -name '*.o' -printf 'Removing %P\n' -delete

	msg2 "Stripping build tools..."
	local file
	while read -rd '' file; do
		case "$(file -Sib "$file")" in
			application/x-sharedlib\;*)      # Libraries (.so)
				strip -v $STRIP_SHARED "$file" ;;
			application/x-archive\;*)        # Libraries (.a)
				strip -v $STRIP_STATIC "$file" ;;
			application/x-executable\;*)     # Binaries
				strip -v $STRIP_BINARIES "$file" ;;
			application/x-pie-executable\;*) # Relocatable binaries
				strip -v $STRIP_SHARED "$file" ;;
		esac
	done < <(find "$builddir" -type f -perm -u+x ! -name vmlinux -print0)

	msg2 "Stripping vmlinux..."
	strip -v $STRIP_STATIC "$builddir/vmlinux"

	msg2 "Adding symlink..."
	mkdir -p "$pkgdir/usr/src"
	ln -sr "$builddir" "$pkgdir/usr/src/$pkgbase"
}

_package-docs() {
	pkgdesc="Documentation for the $pkgdesc kernel"
	depends=("$pkgbase")

	cd $_srcname
	local builddir="$pkgdir/usr/lib/modules/$(<version)/build"

	msg2 "Installing documentation..."
	local src dst
	while read -rd '' src; do
		dst="${src#Documentation/}"
		dst="$builddir/Documentation/${dst#output/}"
		install -Dm644 "$src" "$dst"
	done < <(find Documentation -name '.*' -prune -o ! -type d -print0)

	msg2 "Adding symlink..."
	mkdir -p "$pkgdir/usr/share/doc"
	ln -sr "$builddir/Documentation" "$pkgdir/usr/share/doc/$pkgbase"
}

pkgname=(
	"$pkgbase"
	"$pkgbase-headers"
	"$pkgbase-docs"
)
for _p in "${pkgname[@]}"; do
	eval "package_$_p() {
		$(declare -f "_package${_p#$pkgbase}")
		_package${_p#$pkgbase}
	}"
done

validpgpkeys=(
	'ABAF11C65A2970B130ABE3C479BE3E4300411886'  # Linus Torvalds
	'647F28654894E3BD457199BE38DBBDC86092693E'  # Greg Kroah-Hartman
	'83BC8889351B5DEBBB68416EB8AC08600F108CDF'  # Jan Alexander Steffens (heftig)
)
