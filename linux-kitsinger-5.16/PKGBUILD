# Maintainer: Markus Kitsinger (SwooshyCueb) <root@swooshalicio.us>
# Contributor: Piotr Gorski <lucjan.lucjanov@gmail.com>
# Contributor: Jan Alexander Steffens (heftig) <jan.steffens@gmail.com>
# Contributor: Tobias Powalowski <tpowa@archlinux.org>
# Contributor: Thomas Baechler <thomas@archlinux.org>

### BUILD OPTIONS
# Set these variables to ANYTHING that is not null to enable them

### Tweak kernel options prior to a build via nconfig
_makenconfig=

### Tweak kernel options prior to a build via menuconfig
_makemenuconfig=

### Tweak kernel options prior to a build via xconfig
_makexconfig=

### Tweak kernel options prior to a build via gconfig
_makegconfig=

# NUMA is optimized for multi-socket motherboards.
# A single multi-core CPU actually runs slower with NUMA enabled.
# See, https://bugs.archlinux.org/task/31187
_NUMAdisable=

# Compile ONLY used modules to VASTLYreduce the number of modules built
# and the build time.
#
# To keep track of which modules are needed for your specific system/hardware,
# give module_db script a try: https://aur.archlinux.org/packages/modprobed-db
# This PKGBUILD read the database kept if it exists
#
# More at this wiki page ---> https://wiki.archlinux.org/index.php/Modprobed-db
_localmodcfg=

# Use the current kernel's .config file
# Enabling this option will use the .config of the RUNNING kernel rather than
# the ARCH defaults. Useful when the package gets updated and you already went
# through the trouble of customizing your config options.  NOT recommended when
# a new kernel is released, but again, convenient for package bumps.
_use_current=

### Running with a 1000 HZ tick rate
_1k_HZ_ticks=y

# explicitly set undefined behavior sanity checker kconfig options
# this option may be overridden by _use_current
_use_ubsan=

# explicitly set memory debugging kconfig options
# this option may be overridden by _use_current
_kmem_debug=

# explicitly set thread lock debugging kconfig options
# this option may be overridden by _use_current
_tlock_debug=

### Do not edit below this line unless you know what you're doing

pkgbase=linux-kitsinger-5.16
# pkgname=('linux-kitsinger-5.16' 'linux-kitsinger-5.16-headers' 'linux-kitsinger-5.16-docs')
_major=5.16
_minor=20
pkgver=${_major}.${_minor}
_srcname=linux-${pkgver}
#_srcname=linux-${_major}
pkgrel=1
pkgdesc='Linux with AUFS, pcie-reset, futex2, etc'
arch=('x86_64')
url="https://github.com/SwooshyCueb/linux-kitsinger-PKGBUILD"
license=('GPL2')
options=('!strip' '!debug')
makedepends=('kmod' 'bc' 'libelf' 'python-sphinx' 'python-sphinx_rtd_theme'
             'graphviz' 'imagemagick' 'pahole' 'cpio' 'perl' 'tar' 'xz')

_aufs_repo_name="aufs5-standalone"
_aufs_repo="https://github.com/sfjro/${_aufs_repo_name}.git"
_aufs_fragment="#commit=b7b3978e300446aa452817aee752457e8b9c883f"

#_lucjanpath="https://raw.githubusercontent.com/sirlucjan/kernel-patches/master/${_major}"
_lucjanpath="https://gitlab.com/sirlucjan/kernel-patches/raw/master/${_major}"

_gcc_path="cpu-patches-sep"
_gcc_patch="0001-cpu-${_major}-merge-graysky-s-patchset.patch"
_arch_path="arch-patches-v5-sep"
_futex_path="futex-patches"
_futex_patch="0001-futex-Add-entry-point-for-FUTEX_WAIT_MULTIPLE-opcode.patch"
_fixes_path="fixes-miscellaneous-v7-sep"
_v4l2loop_path="v4l2loopback-patches-v2-sep"
_zen_path="zen-patches-v3-sep"
_lqx_path="lqx-patches-v2-sep"
_clr_path="clearlinux-patches-sep"
_f2fs_path="f2fs-patches-v4-sep"
_lru_le9_path="lru-patches-le9-sep"

_zen_gh="https://github.com/zen-kernel/zen-kernel/commit"

_kernel_git_path="https://git.kernel.org/pub/scm/linux/kernel/git"
_usb_path="${_kernel_git_path}/gregkh/usb.git/patch/"
_kernel_dk_path="https://git.kernel.dk/cgit"
_dk_floppy_path="${_kernel_dk_path}/linux-block/patch/"

_amdgfx_path="https://lore.kernel.org/amd-gfx"
_joshie_s="joshua@froggi.es"

# mglru patches from lore.kernel.org are broken
#_mmml_path="https://lore.kernel.org/linux-mm"
#_mglru_t="${_mmml_path}/20220309021230.721028"
#_mglru_s="yuzhao@google.com"

_patchwork_path="https://patchwork.kernel.org/project"
_mmpw_path="${_patchwork_path}/linux-mm/patch"
_mglru_t="${_mmpw_path}/20220309021230.721028"
_mglru_s="yuzhao@google.com"

_hakavlad_gh="https://raw.githubusercontent.com/hakavlad"

source=("https://www.kernel.org/pub/linux/kernel/v5.x/${_srcname}.tar.xz"
        "https://www.kernel.org/pub/linux/kernel/v5.x/${_srcname}.tar.sign"
        "${_aufs_repo_name}::git+${_aufs_repo}${_aufs_fragment}"
        "${_lucjanpath}/${_gcc_path}/${_gcc_patch}"
        "${_lucjanpath}/${_arch_path}/0001-ZEN-Add-sysctl-and-CONFIG-to-disallow-unprivileged-C.patch"
        "${_lucjanpath}/${_arch_path}/0002-Bluetooth-btintel-Fix-bdaddress-comparison-with-garb.patch"
        "${_lucjanpath}/${_arch_path}/0003-Bluetooth-Read-codec-capabilities-only-if-supported.patch"
        "${_lucjanpath}/${_arch_path}/0004-Bluetooth-fix-deadlock-for-RFCOMM-sk-state-change.patch"
        "${_lucjanpath}/${_arch_path}/0005-mt76-mt7921-add-support-for-PCIe-ID-0x0608-0x0616.patch"
        "${_lucjanpath}/${_arch_path}/0006-mt76-mt7921-reduce-log-severity-levels-for-informati.patch"
        "${_lucjanpath}/${_arch_path}/0007-Revert-NFSv4.1-query-for-fs_location-attr-on-a-new-f.patch"
        "${_lucjanpath}/${_futex_path}/${_futex_patch}"
        "${_lucjanpath}/${_fixes_path}/0001-net-sched-allow-configuring-cake-qdisc-as-default.patch"
        "${_lucjanpath}/${_fixes_path}/0002-infiniband-Fix-__read_overflow2-error-with-O3-inlini.patch"
        "${_lucjanpath}/${_fixes_path}/0003-pci-Enable-overrides-for-missing-ACS-capabilities.patch"
        "${_lucjanpath}/${_fixes_path}/0004-scsi-sd-Optimal-I-O-size-should-be-a-multiple-of-rep.patch"
        "${_lucjanpath}/${_fixes_path}/0005-iomap-avoid-deadlock-if-memory-reclaim-is-triggered-.patch"
        "${_lucjanpath}/${_fixes_path}/0006-tty-Allow-setting-the-number-of-available-virtual-TT.patch"
        "${_lucjanpath}/${_fixes_path}/0007-i2c-busses-Add-SMBus-capability-to-work-with-OpenRGB.patch"
        "${_lucjanpath}/${_fixes_path}/0008-fm-5.16-port-mm-kswapd-patches.patch"
        "${_lucjanpath}/${_fixes_path}/0009-Disable-stack-conservation-for-GCC.patch"
        "${_lucjanpath}/${_fixes_path}/0010-x86-csum-rewrite-csum_partial.patch"
        "${_lucjanpath}/${_fixes_path}/0011-x86-csum-Fix-compilation-error-for-UM.patch"
        "${_lucjanpath}/${_fixes_path}/0012-x86-csum-Fix-initial-seed-for-odd-buffers.patch"
        "${_lucjanpath}/${_fixes_path}/0013-xfs-check-sb_meta_uuid-for-dabuf-buffer-recovery.patch"
        "${_lucjanpath}/${_fixes_path}/0014-openrgb-Deduplicate-piix4-setup-for-HUDSON2-KERNCZ-S.patch"
        "${_lucjanpath}/${_fixes_path}/0015-iomap-Address-soft-lockup-in-iomap_finish_ioend.patch"
        "${_lucjanpath}/${_fixes_path}/0016-kernel-cpu.c-fix-init_cpu_online.patch"
        "${_lucjanpath}/${_fixes_path}/0017-ACPICA-Macros-Remove-ACPI_PHYSADDR_TO_PTR.patch"
        "${_lucjanpath}/${_fixes_path}/0018-ACPICA-Use-uintptr_t-and-offsetof-in-Linux-kernel-bu.patch"
        "${_lucjanpath}/${_fixes_path}/0019-ACPICA-Use-original-data_table_region-pointer-for-ac.patch"
        "${_lucjanpath}/${_fixes_path}/0020-ACPICA-Use-original-pointer-for-virtual-origin-table.patch"
        "${_lucjanpath}/${_fixes_path}/0021-ACPICA-Avoid-subobject-buffer-overflow-when-validati.patch"
        "${_lucjanpath}/${_fixes_path}/0024-mm-Increment-kswapd_waiters-for-throttled-direct-rec.patch"
        "${_lucjanpath}/${_fixes_path}/0025-mm-Lower-the-non-hugetlbpage-pageblock-size-to-reduc.patch"
        "${_lucjanpath}/${_fixes_path}/0026-mm-Don-t-hog-the-CPU-and-zone-lock-in-rmqueue_bulk.patch"
        "${_lucjanpath}/${_v4l2loop_path}/0001-v4l2loopback-${_major}-merge-v0.12.5.patch"
        "${_lucjanpath}/${_v4l2loop_path}/0002-v4l2loopback-${_major}-update-to-latest-git-HEAD.patch"
        "${_lucjanpath}/${_lqx_path}/0001-zen-Allow-MSR-writes-by-default.patch"
        "${_lucjanpath}/${_lqx_path}/0002-PCI-Add-Intel-remapped-NVMe-device-support.patch"
        "${_lucjanpath}/${_lqx_path}/0003-Input-evdev-use-call_rcu-when-detaching-client.patch"
        "${_lucjanpath}/${_clr_path}/0007-port-print-fsync-count-for-bootchart.patch"
        "${_lucjanpath}/${_clr_path}/0012-ipv4-tcp-allow-the-memory-tuning-for-tcp-to-go-a-lit.patch"
        "${_lucjanpath}/${_clr_path}/0013-init-wait-for-partition-and-retry-scan.patch"
        "${_lucjanpath}/${_clr_path}/0016-migrate-some-systemd-defaults-to-the-kernel-defaults.patch"
        "${_lucjanpath}/${_clr_path}/0017-xattr-allow-setting-user.-attributes-on-symlinks-by-.patch"
        "${_lucjanpath}/${_clr_path}/0022-print-CPU-that-faults.patch"
        "${_lucjanpath}/${_f2fs_path}/0001-f2fs-compress-reduce-one-page-array-alloc-and-free-w.patch"
        "${_lucjanpath}/${_f2fs_path}/0002-f2fs-rework-write-preallocations.patch"
        "${_lucjanpath}/${_f2fs_path}/0003-f2fs-reduce-indentation-in-f2fs_file_write_iter.patch"
        "${_lucjanpath}/${_f2fs_path}/0004-f2fs-do-not-expose-unwritten-blocks-to-user-by-DIO.patch"
        "${_lucjanpath}/${_f2fs_path}/0005-f2fs-fix-the-f2fs_file_write_iter-tracepoint.patch"
        "${_lucjanpath}/${_f2fs_path}/0006-f2fs-implement-iomap-operations.patch"
        "${_lucjanpath}/${_f2fs_path}/0007-f2fs-use-iomap-for-direct-I-O.patch"
        "${_lucjanpath}/${_f2fs_path}/0008-f2fs-show-more-DIO-information-in-tracepoint.patch"
        "${_lucjanpath}/${_f2fs_path}/0009-f2fs-support-POSIX_FADV_DONTNEED-drop-compressed-pag.patch"
        "${_lucjanpath}/${_f2fs_path}/0010-f2fs-avoid-duplicate-call-of-mark_inode_dirty.patch"
        "${_lucjanpath}/${_f2fs_path}/0011-f2fs-add-gc_urgent_high_remaining-sysfs-node.patch"
        "${_lucjanpath}/${_f2fs_path}/0012-f2fs-avoid-down_write-on-nat_tree_lock-during-checkp.patch"
        "${_lucjanpath}/${_f2fs_path}/0013-f2fs-do-not-bother-checkpoint-by-f2fs_get_node_info.patch"
        "${_lucjanpath}/${_f2fs_path}/0014-f2fs-clean-up-__find_inline_xattr-with-__find_xattr.patch"
        "${_lucjanpath}/${_f2fs_path}/0015-f2fs-support-fault-injection-to-f2fs_trylock_op.patch"
        "${_lucjanpath}/${_f2fs_path}/0016-f2fs-don-t-drop-compressed-page-cache-in-.-invalidat.patch"
        "${_lucjanpath}/${_f2fs_path}/0017-f2fs-Simplify-bool-conversion.patch"
        "${_lucjanpath}/${_f2fs_path}/0018-f2fs-remove-redunant-invalidate-compress-pages.patch"
        "${_lucjanpath}/${_f2fs_path}/0019-f2fs-move-f2fs-to-use-reader-unfair-rwsems.patch"
        "${_lucjanpath}/${_f2fs_path}/0020-f2fs-do-not-allow-partial-truncation-on-pinned-file.patch"
        "${_lucjanpath}/${_f2fs_path}/0021-fs-f2fs-data.c-fix-mess.patch"
        "${_lucjanpath}/${_f2fs_path}/0022-fix-mess-2.patch"
        "${_lucjanpath}/${_f2fs_path}/0023-f2fs-Restore-rwsem-lockdep-support.patch"
        "${_lucjanpath}/${_f2fs_path}/0024-f2fs-avoid-an-infinite-loop-in-f2fs_sync_dirty_inode.patch"
        "${_lucjanpath}/${_f2fs_path}/0025-f2fs-introduce-F2FS_UNFAIR_RWSEM-to-support-unfair-r.patch"
        "${_lucjanpath}/android-patches/0001-android-export-symbold-and-enable-building-ashmem-an.patch"
        # TODO: This patch was moved at some point. Consider keeping the ll patches we use in our own repo.
        "${_lucjanpath}/ll-patches/0005-mm-set-8-megabytes-for-address_space-level-file-read.patch"

        # https://lore.kernel.org/amd-gfx/20210105220359.1392555-1-joshua@froggi.es/
        "0000-drm-amdgpu-dont-limit-gtt-size-on-apus.patch::${_amdgfx_path}/20210105220359.1392555-1-${_joshie_s}/raw"

        # https://git.kernel.dk/cgit/linux-block/log/?h=for-5.17/drivers-2022-01-11
        #"0000-loop-dont-hold-lo_mutex-during-__loop_clr_fd.patch::${_dk_floppy_path}?id=6050fa4c84cc93ae509f5105f585a429dffc5633"

        # https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb.git/log/?h=f2b42379c57682d4b127283da109fa1a3317966a
        "0000-usb-hub-avoid-warm-port-reset-during-USB3-disconnect.patch::${_usb_path}?id=f59f93cd1d720809466c7fd5aa16a236156c672b"

        # https://patchwork.kernel.org/project/linux-mm/patch/20220314211150.GA123458@xavier-xps/
        "0000-tmpfs-support-for-file-creation-time.patch::${_mmpw_path}/20220314211150.GA123458@xavier-xps/raw"

        # lucjan hasn't been keeping the zen patches updated
        # https://github.com/zen-kernel/zen-kernel/commits/5.16/zen-sauce
        "1001-ZEN-Add-VHBA-driver.patch::${_zen_gh}/c5a351434d9c28a38ca821bd4908046b6cf51954.patch"
        "1002-ZEN-intel-pstate-Implement-enable-parameter.patch::${_zen_gh}/50b43196a404f4bf21fd1347c7800db5329ddbe5.patch"

        # https://www.phoronix.com/scan.php?page=news_item&px=Linux-5.17-USB
        # https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb.git/log/?h=f2b42379c57682d4b127283da109fa1a3317966a
        "2001-usb-Add-Xen-pvUSB-protocol-description.patch::${_usb_path}?id=bae9401dff62d1ac46504a343db8a69e5ac390f6"
        "2002-usb-Introduce-Xen-pvUSB-frontend-xen-hcd.patch::${_usb_path}?id=494ed3997d752810b67cb75d4721b59996cfec38"
        "2003-xen-add-Xen-pvUSB-maintainer.patch::${_usb_path}?id=a92548f90fa6280ca57a8aea1f50d18f2f48cbb3"
        "2004-usb-host-xen-hcd-add-missing-unlock-in-error-path.patch::${_usb_path}?id=a1f79504ceb3ffcd2b777e5ac84c97a0948c2dbd"
        "2005-MAINTAINERS-remove-typo-from-XEN-PVUSB-DRIVER-sectio.patch::${_usb_path}?id=d538ea945532d0d3bd04192543b285e6979d9e8f"

        # le9 + mgLRU stuff
        # pretty confident these git repos aren't going anywhere
        #"${_hakavlad_gh}/le9-patch/f64c95f700c05ecbd8cde7e008ebfd404cb8832a/le9ec_patches/le9ec-5.15.patch"
        # Disabled temporarily because I suspect it's causing stability issues
        #"${_lucjanpath}/${_lru_le9_path}/0001-mm-x86-arm64-add-arch_has_hw_pte_young.patch"
        #"${_lucjanpath}/${_lru_le9_path}/0002-mm-x86-add-CONFIG_ARCH_HAS_NONLEAF_PMD_YOUNG.patch"
        #"${_lucjanpath}/${_lru_le9_path}/0003-mm-vmscan.c-refactor-shrink_node.patch"
        #"${_lucjanpath}/${_lru_le9_path}/0004-mm-multigenerational-lru-groundwork.patch"
        #"${_lucjanpath}/${_lru_le9_path}/0005-mm-multigenerational-lru-mm_struct-list.patch"
        #"${_lucjanpath}/${_lru_le9_path}/0006-mm-multigenerational-lru-aging.patch"
        #"${_lucjanpath}/${_lru_le9_path}/0007-mm-multigenerational-lru-eviction.patch"
        #"${_lucjanpath}/${_lru_le9_path}/0008-mm-multigenerational-lru-user-interface.patch"
        #"${_lucjanpath}/${_lru_le9_path}/0009-mm-multigenerational-lru-Kconfig.patch"
        #"${_lucjanpath}/${_lru_le9_path}/0010-mm-vmscan-add-sysctl-knobs-for-protecting-the-workin.patch"
        # https://lore.kernel.org/linux-mm/20220309021230.721028-1-yuzhao@google.com/T/
        #"3001-mm-x86-arm64-add-arch_has_hw_pte_young.patch::${_mglru_t}-2-${_mglru_s}/raw"
        #"3002-mm-x86-add-CONFIG_ARCH_HAS_NONLEAF_PMD_YOUNG.patch::${_mglru_t}-3-${_mglru_s}/raw"
        #"3003-mm-vmscan.c-refactor-shrink_node.patch::${_mglru_t}-4-${_mglru_s}/raw"
        #"3004-Revert-include-linux-mm_inline.h-fold-__update_lru_s.patch::${_mglru_t}-5-${_mglru_s}/raw"
        #"3005-mm-multi-gen-LRU-groundwork.patch::${_mglru_t}-6-${_mglru_s}/raw"
        #"3006-mm-multi-gen-LRU-minimal-implementation.patch::${_mglru_t}-7-${_mglru_s}/raw"
        #"3007-mm-multi-gen-LRU-exploit-locality-in-rmap.patch::${_mglru_t}-8-${_mglru_s}/raw"
        #"3008-mm-multi-gen-LRU-support-page-table-walks.patch::${_mglru_t}-9-${_mglru_s}/raw"
        #"3009-mm-multi-gen-LRU-optimize-multiple-memcgs.patch::${_mglru_t}-10-${_mglru_s}/raw"
        #"3010-mm-multi-gen-LRU-kill-switch.patch::${_mglru_t}-11-${_mglru_s}/raw"
        #"3011-mm-multi-gen-LRU-thrashing-prevention.patch::${_mglru_t}-12-${_mglru_s}/raw"
        #"3012-mm-multi-gen-LRU-debugfs-interface.patch::${_mglru_t}-13-${_mglru_s}/raw"
        #"3013-mm-multi-gen-LRU-admin-guide.patch::${_mglru_t}-14-${_mglru_s}/raw"
        #"3014-mm-multi-gen-LRU-design-doc.patch::${_mglru_t}-15-${_mglru_s}/raw"
        #"${_hakavlad_gh}/le9-patch/f4fdc45b4e66f1bf8861eb7157c409a025899e96/le9ec_patches/le9ec-5.15-MGLRU.patch"
        # Disabled temporarily because I suspect it's causing stability issues
        #"${_hakavlad_gh}/disable-i915-gem-shrinker/4e6da2a9b0602d3f80b418026d0a8bf188fc0de6/disable-drm-i915-gem-shrinker-5.10.patch"

        # https://clbin.com/VCiYJ
        "0001-pcie-reset-kludge.patch"

        # The rest of the patches came from random git repositories. In my experience, random git repositories tend to
        # vanish, so instead of pulling the files from the repositories, they will be included in this one.

        # https://github.com/Frogging-Family/linux-tkg/tree/master/linux-tkg-patches/5.16
        # Disabled temporarily because I suspect it's causing stability issues
        #"0001-mm-Support-soft-dirty-flag-reset-for-VA-range.patch"
        #"0002-mm-Support-soft-dirty-flag-read-with-reset.patch"

        # https://github.com/kevall474/kernel-patches/tree/main/5.13/misc-patches
        "vm.max_map_count.patch"

        # the main kernel config files
        'config')

## For consideration:
# https://www.phoronix.com/scan.php?page=news_item&px=AMD-PAN-Linux-RFC
# https://www.phoronix.com/scan.php?page=news_item&px=AMD-Linux-5.18-Sched-Zen-LLC
# https://lore.kernel.org/lkml/20220206022023.376142-1-andrew.smirnov@gmail.com/
# https://www.phoronix.com/scan.php?page=news_item&px=Speculative-NUMA-Fault
# https://www.phoronix.com/scan.php?page=news_item&px=AMD-x2AVIC-Linux-KVM-SVM
# https://lore.kernel.org/lkml/20220202041112.273017-1-suravee.suthikulpanit@amd.com/
# https://lore.kernel.org/lkml/20220211000851.185799-1-suravee.suthikulpanit@amd.com/
# https://lore.kernel.org/linux-wireless/20220226045047.643695-1-mikezackles@gmail.com/
# https://wiki.archlinux.org/title/fbsplash
# https://bugzilla.kernel.org/show_bug.cgi?id=202055
# https://lwn.net/Articles/711248/
# https://github.com/zen-kernel/zen-kernel/commit/d7406fe7e75e1fe31e6b16474fb76f99e2c5926c
# zen3 noflr patch
# sm2262 noflr patch
# https://patchwork.kernel.org/project/linux-mm/patch/20220311090119.2412738-1-maobibo@loongson.cn/
# https://patchwork.kernel.org/project/linux-mm/patch/20220309002550.103786-1-npache@redhat.com/

sha512sums=('21c55ab96ac571a16a4731089625f24918ec410849a8351304894bbb2b47f336586cd9d8f39a6b2e9b920ef0142dfbf758075dd6da606c3b9e936b5960cdc7bd'
            'SKIP'
            'SKIP'
            '5cb79731f957372cbd3ddaf93ac1cbc6eca4a526225f5bbe9c5eed11529fbefa66934ac5002410505df84281144da15e39326a8df886fe45da937304ed0b6fcf'
            '860c3d6f0c1b4528e11ce3e99cb0c3acf67f8f657f1471774bd14d75bdc92a72eb33d60fc3b7fd7465b2716733a5c7ad9d07107f96f2a568505573618583d5dd'
            'ab229799fe12a9a9b1f52ea8714abaa66085a3173f04e2d5e533b0920ba8b72e41c37ab7332db8b15b1810b9b14baf84777128de9d3495f7b438cdb5805f1a25'
            '8b4d881cde779b016ea01f959130c2ad0f511aa09e11b7c725acdc06baf536d3ca5ff8284dfb8fd0321f04a338a6e144babfd679fed95717e47e93a787b3415a'
            'e7c5d1bebafe300a67a3839094841c47b645653a14eb33dc9d63c29aaaed57d02ce723bd90a5bb48050f14d96b129d85f89fe74a7a13b30f99d4a0d98a1dfb55'
            '56f7f517da01646ee9ef6a5842d2ec59fa77d8e280e34ea6aa9bba27bd5c8863b7659e1e792107be517e3ac77466ed57263bb0d5a9618cd7a2ad71b9639264d7'
            'fe34ea8073cf29a53048be729f2ada6af38656d015061178452c6d60ab0f97f81e8d282193ba39dbba198263b3d2ff7f39ae33caded7b681600ae3391aa18a21'
            'dbdb3daf6f309e79890bde2eb9b72e3f3fa9e55be395b2bfb6385179d48793cdd440fd757481281b081a10f1e28b172de0076a518831842b9ab444e4733df071'
            'f3336e323d3ed186bfbc7ca01eec9967d1ffd71ae254707282caf8d7af66c5c11f39498da642a0768245e79918a857d76d807c7c99a32e9145e8524c58415fe9'
            'f6eaffba00aaf5d86ed3d7b3157760ae4843de21cec4228f59af4e165f3af171cb3380f401874ce1574cc8cc15c135bc1d3c6903833f136bb445123720f0a6dc'
            '9e67c3d9e852d705495f06d088ac6abed52151e5ba4d51dcd3c8f71980012678bfa2f07ae0a1f5b28ab9dfddaa42f4ee046e466f4bd7311897b752cb78801fad'
            '1180b2821ae1b0ee1dd8ce207f1f62d032398d5d289d126ee0fd315cb8480874c6da6053c9a58e4574816f37845740fad6275ff1b5463211ab7719b14c7ccc3c'
            '401d601af279bb094d48d81d9f4287aacaf66c61294ebe451471801a0a29958d135a9c5655d58825990628dc86bddd464974a264a62ced494824b19455494371'
            'a6d5fba6d4d69ac080d0a67a00c1381cd1d0da7891b8bb84c6e4c842fa794ad2d894e541803942382a73edca0a676ab22c43164f5766e431f4c555b65fbd501a'
            '3fec1f2eff9e7b5c86efc39a69935a4641c789c757840caad2fc87522b18dc6d8d0fd1c91be658b25d74914d69c22d25e342103b3d674c53c7a049f4dc50449c'
            'dbd5978c51c2fa635c51e49189f71397417c3130ca44fd309fd4f265b1e3a5402743f5b9f569c7ec9ed0dc1743e364803d4eae0bfade2ffe5c77cec961106ea3'
            '905bc53fafb21c54df436e9bd282ae5ac4bff2eab1c2c50b64d1d3030fb665295cc3a49047888f3580a1bdc4eba212d2422d326bfbedd797f683ea8d92cffcf8'
            '1146b00c1d9df4c0fca0840e7c90b4f39785e325ce234a82ed1e482657d2f7af129a485962a0764659c8e4ae00b0700924fbb5f4e2f88751f3a34f6701b06ba3'
            '6d9a86b99ce509d22c720bab30534ccfbb7493296eb2c07530c84857921e92d63a0b4d812703d10173ac5fb10739c9c48acacc6e4258c86dcb461ff8cc01128e'
            '66efdcfe4992decdded26573e7833db685494630be618fafe5cb971722fd610bd1e1d26125ff67e6bb599692124c419e9b97872bf3b2e1161bc0fa3093ac6156'
            'b4af08d16c11bf7ef6a1426bbb9caf9922977ae0bd4dc3e111861573f4e8e1a166413fe815d513034b422047acabe1ef2cd52f76927dc5ba037ac6380cb792d7'
            'bd7350c3168ab0c24eb9de2608e52a4d56ee3a4927f164df8c43600b9768dcd913630a217aa76cc27126a3f2967ea6917dba62137c38bcdaf2b2f943647f1aa9'
            '3c00a815a7cea7429589c332f9b086b260788dc42b3021c20577fb6914408d1807f8b39246e30db26a116c698a8b582968cb0e82c7a039ce3e44b1f79c1de2d4'
            '63865fd66fe1bff5bd4dae569cadaccd2e92e455d92458c5bcd69fddce7cb7c4fbefe6b18e146274f8721998ea8a1ab1516ed840c8cd38243d2954d096d63bc0'
            '3181ea607c3705300690771b6833ebb84defdec5ccf13b3fa7b53a3f3630c25edadf747ec95faaada8b66551123bef451128b67408e93d11f97f6b3e455bb765'
            '8d1e498412ea2e999261949023ef4eafc42e4234fcb2c8ff3ff1434a3f6c57ce2cf033f2708233e8e08e819bcf2bc6de79ec81961431e45d02d2c781f90e4375'
            '7bcc76cad314c89c22530f8a5b5fabdbebfc2aee7d7a57029ecad716d44863b2ad80b7cf8356307293dbae226e356f83078f14e1c9bde1f2b6557604a1391f9c'
            '8cb9bf7871b31902ee74c46134a2b75c030c2eacf051b6480d8bea7970967d72a07853d8baf261d9645875283ca201201f27c846901b35a9ed5b4093b9803b50'
            'c480df4c48842d323f8ce88b6059b6e75773bdf15b8cd83f7ac56ff4dd3776e71f020fdaa60e40366016b5890061ccad35102e7d2eb5ca030c275b6086d1600e'
            '6a37f6a611d1b7149f4d589cc46fa6b0e29d65bd15bd7350207c0ed7c23621f68ef6ecd4d17715eea3b6073bdcd9209045fd5d1ef19838fe29b6254371e7b3e8'
            'ef598ce6b1ceaa126e9f2616cf89f6dc524fe221181f5609deebf16e368a05f9c7127005d6cc2e69baca1b10479a7675b42eee76693c35c883a4e20a3b54a71a'
            'd9b7dac5b27b7e45d5d6d51f544ff6774569f6777f601d89ae30792df6b5a5b5d8fcdb0ae660044db6bed3a269790d018dff784b559488327e5346ea936c2667'
            'b08b8929317c9bb8cfb962562ed055bb5033f1e9cad92490f62aaba96fbebafb916466e2c0c6947ae95fd04b9ab2300b93dd2981fc1dcbafd0bae8f8a3299a80'
            '7ae8ab98b103f9f73d46fc59191eb915a0d71c3e8e422c9309ad98597a1a566cfe2bcca76c886dda7adfcb1d05e56a60af5b260bb5c4ed4b9d9b4bbbc371a23b'
            '981dcbb9700de3911ba4064f75ae823045d11faaa750f959dfd7a92acaab8369fe73cb098d07994a24cfd64d0b1c07c179f16cf42008d6072654e8f295fd206c'
            '4b5530b53a511ae4b5f5d608a6c6ef566a4778d12e8d4e8cf82e2def09b758ac4c20d83bcbd3a3bea15906b08ce29268e0c80800d8a1230b690b6e09f7e005c0'
            '72983cb14a47a759d43f359c7813b8096365940faa2be8dde1544f6f75b8b0991d315fed30a5cce4738de357bc66dccd240b9d8157d80cae943cb9dcf34e8ace'
            '37ca85b7ba507bdf92758013351719c8557c2dd0873dc716b7f10956838bfcf079aefe935abd22e9d08c2fee814c3581d103508f18e62baf948761fbb0bf74fb'
            'c4e65d66112426d119f0ea81fc9fbd368ee94d8eaa765828c090ba93612ea953f61ba7e241ac4328dc61ac79168b4ee09d16a8bb8098edede3d20e1b6b62d553'
            'c9d30a4c8a82c13387d2ee0932ac374561f064802f37666d9adc50731524767eb803fd3df8982be53b851179ae1ad42f2890db675859efc460ef8abaac69cbbe'
            '809898f4664f60f8d201b4257ecdec12ab1f3af3c0d96e727f8c0afc98b82a99fa62b26c534b8d8eaf66c59a4dfb6546b20404a251ec58697db011a9790c64a4'
            '71d0ac0ecb917800a0d2ecb5bfa7c79c3e0b7fca7b6399aa668296002031d9513cc6f15a672797e5e15febfcd54a6bf22ed9d14c6a54d284bc31903edcb74dc6'
            'e3d3fde2e52f527401a188366e53826999e508b01955a55f5e2c56b9b2d0d821f5ee8df2fabd95798570faf775e4812d93e22e1d7625fd507fad2e30283b21b1'
            '0ad1e48d37a6f0cd88757a897fe6464763a3dbecb84f348051f5d4cd8554212a92af8ba5bfe1c92c543201b04bfd7bfca551cb2edb7c0f1bc6e72af9260c3fc6'
            'a034b125713014bbf2dc6ff423ede2ae95b199c700593b28d0af5537fa3d5297b1341939745ba0528a68d62e2dba12d1bb66a61a16858960cdb154a92ec19f26'
            'cc2955fe81917252c4cf5b53b174619323c51d5608669ee63461ba5a568d64b5659ada7e5bdeed1f579f6f908c741bbe7c093c09282257d21b9e4ad9efd4b327'
            '8f1852ef3679ebf9bac0fb9882afcf07aa810b33172785b2553736f9392c231b3d77a9a748c75a0fca0f74165e0dab6a12df6b6d071f8a6c85145bc69dfe2f3c'
            '25cc2e403842925ef56848d6cbf3f96524658342820a2425b944faf61679c3150163c445a6ea475a6b58735f0ef70ce968bd441e49ab48921c7e1b0c49b731c5'
            'c765155cfa13caa9d8cade8f1c4faf77152196a992a165efb0b7d97159d13bab6dcb49f07b662df4d981f2dd75ae17c11dcba49f7a7818811dd42d27c01fbe3a'
            'c239ae40a391d5abb13d2662b548ced86071ee7a13f33eb23744aa9a47c1ba030a4618e0425aa381146db9028c90becc465738a3e14a183fca23bd6a1442d03f'
            '2f1df7ee37fbeb6689cf9b924b92a7e6d4a69f3bf9be093f96fd9e00da993e8817f9a7a7252d610eabfd09dbb28f95c60718d7fc11b19b761ca18f3f7e1dc3a0'
            'd4dfe79b6f15c7d597d7fee3cd76abc545efe4c0347ca03d052ae121915c4b75bccc76b6c101fbd46f54715671d9a2bc203ed27727bc7e256c30b24aad2d8c85'
            '7fdf370ba6e2327cc33b3bb17cb236c9bbd09d227b8404761eef41d2967d0cefbf3f131654bee7922ed293d0223fa129ee8a1399ae53775e28b62388a1f84aab'
            'c41f20b1a6a0f6ffdf99ea49ecd3dd1831be0b67646645469004bd18b38ebb8d746a6270d3329992348c7fbb9e9645cf37b7973eb9f26a2c2c196423163762ec'
            'aa7573e340e6033ece9fb596e1feee1f7edd441213ca9e256cb7f2c6a6793485784c6be0e1535933a9ab740f88b586273ef788af3af4390dbe95c95a531da944'
            '3d383ac6a333b3bddbf0abac1643320a6eb25a11b08e7859004509fbfea26d909a705449f97f251b6966a587a3fa831f3dc73c600faa524c9378912883319f28'
            '428f9712cf2246a0d727086841adcd302558f79f1dcfc27d5a80d4d3d51ee23025aee37636a56c2ebda34bd6c67bdf6f8287a7234f2cde6e5e99a49f3eb2fa84'
            'f97aa3e5c810af67e8013bd4ec3249e91783913053e0559d3cfa403a06986d5a795225958fef12786101bbf0b9bab83cf73568103edc174d15a2657df19f5bd8'
            '50cac08ddeb89bad39790f41cbc5ef5d687a939ebe7f2d0cb828d0fbefd6ca8125f3ddb64eb7d4e94102e904c7c916990444eaaa80060bb8ad51663046fa9fa1'
            '10a39318f3426b3b8bc5086366f1d3836b209f871db958e7931cc2ab99aef0d696863bedd2c6b50c563ecf97b70bc56a9e40fb0a71ab35e7a96df879fa216097'
            '27ac69e7e094d7fb5f0b191bf19ef3fb103ce7744d3789907fc1b2ff272b08c692e19629598099a7a1be9c834dd2cd2faf35b0d0d24f311204a96b037db1f467'
            '929237ff1c4021b077b716f576d933e48d92bb64c9cc2cb2f458b3c80170b5f223d8a1dd866c67d30d6b2aef4411a5abf833438e82f684072be108ecb6c06833'
            'bb1966f231fc18a424594f6081742d79809c68bba52c8372b87a90a6d2fa3954de3adff10b2d9ad47018aad1334389f42458b7931663773fc629162041052333'
            'e576eaff3aeec0372d697e76ae46f9e04a941e4302e1822481e6fd201b9cc4b02d9877761b905975592d9de6a74f35b16cba682ca7f72e5be9e8f5877829a1c7'
            '3130903cfed9b6a96a0c4a29faed68f0ccfa6a90123efef00ad60d1f139c8c7b00d12d47e16b1073a90180b8674f5e08fa1d8e55ce16bed7ec1dae3dba3f1790'
            'defd0656e658710f5b494266fa38a1fa91d76265af9c3f8808edd804ad388561d844ed7bb9a70a89cade6ae83775765f4768c0550a6a5e0963d805f134440b8b'
            '1f130ec246100c82690d5f33601463e9af1ba42b6b1a619a12d66f47cf45c4c194d9e70ba1dd07cd62d18a4c696b859d3feb9891b73ef421023b5a1013ccbdf9'
            '7bc09818bdf4596f0f9106ff3f26aea898c9bc45a9fa4d30114b75bab896980dbdcbd5b3ee8dd985892741e3cb4d50f9bc3fb9c2d20ab9d11dcfe8d067d673fe'
            '1070c5611ca546db769b84bb27723e046e59a66228030fe4fafa781ae68d1fb2be557d88547ffbae6d2b38a8039dd4ae654aa3ed81837bdd84354a11f0e9a90f'
            'b9df26d3b6be1bb2da82c12a58ad3c400ffa59b97aafa6f0898c563b9e4418d26acca451c1e0ccc8c4ef67caf3ca5eac998bcc06e4940179d8808d4c147227cd'
            'ff0e900a6b44355064d12ecdeabc0acf7609d86f08cdc6bdf6bf32ff707892ef04e65909d426914a3407360e5595c94b53a064e1404b425a520a7fdb300ac06a'
            'c99b280a2546b95f254850cbc306e0f0345068fc03df19dbc23258dacd91b7b01fc84167b0030e52ea9dc650ff541dc27591514f0828bb923e92b0c7c5f40674'
            '84c236f92ffc9d14b0f8462ca606080f3aa4d9fe5f103a9c1cdc7990a9b14c788bd18664b51d8b4839b2c18e6a323758593b358a6985a6a96b136dbc60b23031'
            'f793589e0d5c7e04d2bdbf86d0554048c1fc29bb5ad625774445517d85ee7862a885d870e3f58f63c33e5274c1052261b6684afae0d8c60fe5f2844e3c905b2c'
            '683d582b24542bb062d22687fc9113007be6e9c4d431ab0e2e999ce44bc9b1cc317957719056624654e8c72416c6abe209d3b9755514e8c99931a125dc666912'
            'a949b964953646410c55bded1fa07e4a57cee69e1de23448c34b7950589c2cec25cea948e518d5ed3d3755b65412620b642bbf0e1f8fa05dc1c66aaecd15988b'
            '9a40c4b7ff789253e0a830ebfd688da722804a922bca507c7d39edafb00343ec7bd7ecaab8980fdc4969a6c4ac4cd91d3dbf7ea6118fdf142e7720e2fc6247c9'
            '675d6dfc5d324ca09d99d8db7862971ca22a7d7fec3b8f4f3d55dc525843449ed1a095d45bf39c165f669f23029841258d448d235606354f6a606339958418bc'
            '16df1c1730726ec161be304a843af72148177ec9becd63b03cfdb301662a86d4fa7a78957efbc52a098761617992bde16fccead5d0dacc5318735020bffb45c7'
            'a279af97b27d6da76799093aa99962fc924b007fe1c9df7bd2496ea41d6ec1299c4cf5e1c61d368ef6df84054da0201fde024e44a12ffc5534bf6b82026b7144'
            'b65389b44817cb710a9f787a76dd5fa0c99f0db4a05b7b582ebe1e85cd02ea05f7503dfc4659ad39251a10c9ff5709c12466c52b227de1c07f87b35a14fe4ad7'
            '310654b8bb11aa1af48d6fae21d0c6bcfe9f06c27828274c5749d0ab0d759e77441e8b5323b8c6665b23161c9d35c4a9743948cc1b474deb3b1d2c98752cbd97'
            'f2748495022b16ef93835b34bba1086b415bf90833836b150e0cae2652f6101c337895699476eb98a9ba5cb2eca9dfe9c9bcc2a23cdbc31bc402ab498fac48d4'
            '90f8c978bde10c80770431c3d8686b6f8c10e2c9645dddb9e8772312eb0cb1129bcfc6af5b86477c5616b723da25f629859092b1af178da7bd71c7b89e1de97d')

export KBUILD_BUILD_HOST=archlinux
export KBUILD_BUILD_USER=$pkgbase
export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"

_aufs_patches=(
	######################
	## Required patches ##
	######################

	"aufs5-kbuild.patch"
	"aufs5-base.patch"
	"aufs5-mmap.patch"
	"aufs5-standalone.patch"

	######################
	## Optional patches ##
	######################

	## Add support for nested loopback mounts in branch-fs
	#"aufs5-loopback.patch"

	## Make /proc/mounts show all mountpoints
	## Does not exist in the current tree?
	#"proc_mounts.patch"

	## Prevents assignment of 0 as inode number
	"vfs-ino.patch"

	## Keeps tmpfs inode number low
	#"tmpfs-idr.patch"

	## required for LOCKDEP
	#"lockdep-debug.patch"
)

_aug_colorize() {
	# prefer terminal safe colored and bold text when tput is supported
	if tput setaf 0 &>/dev/null; then
		_MAGENTA="${BOLD}$(tput setaf 5)"
		_CYAN="${BOLD}$(tput setaf 6)"
	else
		_MAGENTA="${BOLD}\e[35m"
		_CYAN="${BOLD}\e[36m"
	fi
}

_msg3() {
	(( QUIET )) && return
	local mesg=$1; shift
	printf "${_MAGENTA}   +-${ALL_OFF}${BOLD} ${mesg}${ALL_OFF}\n" "$@"
}

prepare() {
	_aug_colorize

	cd $_srcname

	### Setting version
		msg2 "Setting version..."
		sed -e "/^EXTRAVERSION =/s/=.*/=/" -i Makefile
		scripts/setlocalversion --save-scmversion
		echo "-$pkgrel" > localversion.10-pkgrel
		echo "${pkgbase#linux}" > localversion.20-pkgname

	### AUFS
		msg2 "Copying AUFS build files and applying AUFS patches..."
		local aufs_srcdir="${srcdir}/${_aufs_repo_name}"
		local kern_srcdir="${srcdir}/${_srcname}"
		pushd "${aufs_srcdir}" > /dev/null
		cp -r {Documentation,fs} "${kern_srcdir}"
		cp include/uapi/linux/aufs_type.h "${kern_srcdir}/include/uapi/linux"
		popd > /dev/null
		# Kludge for 7a0921a23cae42e9fa5ce964f6907181b6dc80d8
		sed -i '/^EXPORT_SYMBOL(__fput_sync);$/d' fs/file_table.c
		local aufs_patch_fname
		for aufs_patch_fname in "${_aufs_patches[@]}"; do
			_msg3 "Applying AUFS patch $aufs_patch_fname..."
			patch -Np1 < "${aufs_srcdir}/${aufs_patch_fname}"
		done
		# Kludge for 7a0921a23cae42e9fa5ce964f6907181b6dc80d8
		sed -i 's/^EXPORT_SYMBOL_GPL(__fput_sync);$/EXPORT_SYMBOL(__fput_sync);/' fs/file_table.c

	### Patching sources
		local src
		for src in "${source[@]}"; do
			src="${src%%::*}"
			src="${src##*/}"
			[[ $src = *.patch ]] || continue
		msg2 "Applying patch $src..."
		patch -Np1 < "../$src"
		done

	### Setting config
		msg2 "Setting config..."
		cp ../config .config

	### some initial configuration
		# (we start with the arch config as a base so I can keep track of stuff easier)
		scripts/config --undefine CONFIG_LOCALVERSION_AUTO
		scripts/config --enable CONFIG_LZ4HC_COMPRESS
		# from patches
		scripts/config --enable CONFIG_FUTEX2
		scripts/config --enable CONFIG_VHBA

	### for debugging
	### https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=0aaa8977acbf3996d351f51b3b15295943092f63
		# prink and demesg options
		scripts/config --enable CONFIG_DEBUG_BUGVERBOSE
		scripts/config --enable CONFIG_DYNAMIC_DEBUG
		scripts/config --enable CONFIG_PRINTK_CALLER
		scripts/config --enable CONFIG_PRINTK_TIME
		scripts/config --enable CONFIG_SYMBOLIC_ERRNAME
		# Compile-time checks and compiler options
		scripts/config --enable CONFIG_DEBUG_INFO
		scripts/config --enable CONFIG_DEBUG_SECTION_MISMATCH
		scripts/config --set-val CONFIG_FRAME_WARN 2048
		scripts/config --enable CONFIG_SECTION_MISMATCH_WARN_ONLY
		# Generic Kernel Debugging Instruments
		scripts/config --enable CONFIG_DEBUG_FS
		scripts/config --enable CONFIG_DEBUG_FS_ALLOW_ALL
		scripts/config --enable CONFIG_DEBUG_IRQFLAGS
		if [ -n "$_use_ubsan" ]; then
			scripts/config --enable CONFIG_UBSAN
			scripts/config --enable CONFIG_UBSAN_BOOL
			scripts/config --enable CONFIG_UBSAN_BOUNDS
			scripts/config --enable CONFIG_UBSAN_ENUM
			scripts/config --enable CONFIG_UBSAN_SHIFT
			scripts/config --enable CONFIG_UBSAN_UNREACHABLE
			scripts/config --undefine CONFIG_UBSAN_ALIGNMENT
			scripts/config --undefine CONFIG_UBSAN_DIV_ZERO
			scripts/config --undefine CONFIG_UBSAN_TRAP
		fi
		scripts/config --undefine CONFIG_WARN_ALL_UNSEEDED_RANDOM
		# Memory Debugging
		if [ -n "$_kmem_debug" ]; then
			scripts/config --enable CONFIG_PAGE_EXTENSION
			scripts/config --enable CONFIG_PAGE_OWNER
			scripts/config --enable CONFIG_DEBUG_KMEMLEAK
			scripts/config --enable CONFIG_DEBUG_KMEMLEAK_AUTO_SCAN
			scripts/config --enable CONFIG_DEBUG_OBJECTS
			scripts/config --set-val CONFIG_DEBUG_OBJECTS_ENABLE_DEFAULT 1
			scripts/config --enable CONFIG_DEBUG_OBJECTS_FREE
			scripts/config --enable CONFIG_DEBUG_OBJECTS_PERCPU_COUNTER
			scripts/config --enable CONFIG_DEBUG_OBJECTS_RCU_HEAD
			scripts/config --enable CONFIG_DEBUG_OBJECTS_TIMERS
			scripts/config --enable CONFIG_DEBUG_OBJECTS_WORK
			scripts/config --enable CONFIG_DEBUG_PER_CPU_MAPS
			scripts/config --enable CONFIG_DEBUG_STACK_USAGE
			scripts/config --enable CONFIG_DEBUG_VIRTUAL
			scripts/config --enable CONFIG_DEBUG_VM
			scripts/config --enable CONFIG_DEBUG_VM_PGFLAGS
			scripts/config --enable CONFIG_DEBUG_VM_RB
			scripts/config --enable CONFIG_DEBUG_VM_VMACACHE
			scripts/config --enable CONFIG_GENERIC_PTDUMP
			scripts/config --enable CONFIG_KASAN
			scripts/config --enable CONFIG_KASAN_GENERIC
			scripts/config --enable CONFIG_KASAN_INLINE
			scripts/config --enable CONFIG_KASAN_VMALLOC
			scripts/config --enable CONFIG_PTDUMP_DEBUGFS
			scripts/config --enable CONFIG_SCHED_STACK_END_CHECK
			scripts/config --enable CONFIG_SLUB_DEBUG_ON
			scripts/config --undefine CONFIG_DEBUG_PAGEALLOC
			scripts/config --undefine CONFIG_DEBUG_KMEMLEAK_DEFAULT_OFF
			scripts/config --undefine CONFIG_DEBUG_RODATA_TEST
			scripts/config --undefine CONFIG_DEBUG_WX
			scripts/config --undefine CONFIG_KFENCE
			scripts/config --undefine CONFIG_PAGE_POISONING
			scripts/config --undefine CONFIG_SLUB_STATS
		fi
		# Debug Oops, Lockups and Hangs
		scripts/config --enable CONFIG_DEBUG_ATOMIC_SLEEP
		scripts/config --enable CONFIG_DETECT_HUNG_TASK
		#scripts/config --enable CONFIG_PANIC_ON_OOPS
		scripts/config --set-val CONFIG_PANIC_TIMEOUT 0
		scripts/config --enable CONFIG_SOFTLOCKUP_DETECTOR
		scripts/config --undefine CONFIG_BOOTPARAM_HUNG_TASK_PANIC
		scripts/config --undefine CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC
		# Lock Debugging (spinlocks, mutexes, etc...)
		if [ -n "$_tlock_debug" ]; then
			scripts/config --enable CONFIG_PROVE_LOCKING
			scripts/config --undefine CONFIG_PROVE_RAW_LOCK_NESTING
		fi
		# Debug kernel data structures
		if [ -n "$_kmem_debug" ]; then
			scripts/config --enable CONFIG_BUG_ON_DATA_CORRUPTION
		fi
		# RCU Debugging
		if [ -n "$_tlock_debug" ]; then
			scripts/config --enable CONFIG_PROVE_RCU
			scripts/config --enable CONFIG_PROVE_RCU_LIST
		fi
		# Tracers
		scripts/config --enable CONFIG_BRANCH_PROFILE_NONE=y
		scripts/config --enable CONFIG_DYNAMIC_FTRACE=y
		scripts/config --enable CONFIG_FTRACE=y
		scripts/config --enable CONFIG_FUNCTION_TRACER=y
		# stuff I added
		scripts/config --enable CONFIG_CRASH_DUMP
		scripts/config --enable CONFIG_PROC_VMCORE

	### AUFS
		scripts/config --module CONFIG_AUFS_FS
		scripts/config --undefine CONFIG_AUFS_BRANCH_MAX_127
		scripts/config --undefine CONFIG_AUFS_BRANCH_MAX_511
		scripts/config --undefine CONFIG_AUFS_BRANCH_MAX_1023
		scripts/config --enable CONFIG_AUFS_BRANCH_MAX_32767
		scripts/config --enable CONFIG_AUFS_HNOTIFY
		scripts/config --enable CONFIG_AUFS_EXPORT
		scripts/config --enable CONFIG_AUFS_XATTR
		scripts/config --undefine CONFIG_AUFS_FHSM
		scripts/config --enable CONFIG_AUFS_RDU
		scripts/config --enable CONFIG_AUFS_DIRREN
		scripts/config --enable CONFIG_AUFS_SHWH
		scripts/config --enable CONFIG_AUFS_BR_RAMFS
		scripts/config --enable CONFIG_AUFS_BR_FUSE
		scripts/config --enable CONFIG_AUFS_BR_HFSPLUS
		scripts/config --undefine CONFIG_AUFS_DEBUG

	### CPU optimization
		# I want to be able to slap an HDD with this kernel on it in just about any machine
		# I'm very, very unlikely to encounter any CPUs older than AMD K8
		scripts/config --enable CONFIG_MK8SSE3
		scripts/config --undefine CONFIG_GENERIC_CPU
		# I'd add an -mtune=znver1 if I could

	### NTFS3
		scripts/config --module CONFIG_NTFS3_FS
		scripts/config --disable NTFS3_64BIT_CLUSTER
		scripts/config --enable NTFS3_LZX_XPRESS
		scripts/config --disable NTFS3_FS_POSIX_ACL

	### Android stuff
		scripts/config --enable CONFIG_ASHMEM
		scripts/config --enable CONFIG_ANDROID
		scripts/config --enable CONFIG_ANDROID_BINDER_IPC
		scripts/config --enable CONFIG_ANDROID_BINDERFS
		scripts/config --set-str CONFIG_ANDROID_BINDER_DEVICES "binder,hwbinder,vndbinder"

        ### Switch controller drivers
                scripts/config --module CONFIG_HID_NINTENDO
                scripts/config --enable CONFIG_NINTENDO_FF

	### mgLRU stuff
		scripts/config --enable CONFIG_LRU_GEN
		scripts/config --enable CONFIG_LRU_GEN_ENABLED

	### le9-patch values
		scripts/config --set-val CONFIG_ANON_MIN_KBYTES 0
		scripts/config --set-val CONFIG_CLEAN_LOW_KBYTES 262144
		scripts/config --set-val CONFIG_CLEAN_MIN_KBYTES 0

	## Fill in remaining defaults
		make olddefconfig
		diff -u ../config .config || :

	### Prepared version
		make -s kernelrelease > version
		echo "Prepared $pkgbase version $(<version)"

	### Optionally use running kernel's config
	# code originally by nous; http://aur.archlinux.org/packages.php?ID=40191
	if [ -n "$_use_current" ]; then
		if [[ -s /proc/config.gz ]]; then
			_msg3 "Extracting config from /proc/config.gz..."
			# modprobe configs
			zcat /proc/config.gz > ./.config
		else
			warning "Your kernel was not compiled with IKCONFIG_PROC!"
			warning "You cannot read the current config!"
			warning "Aborting!"
			exit
		fi
	fi

	### Optionally set tickrate to 1000
	if [ -n "$_1k_HZ_ticks" ]; then
		_msg3 "Setting tick rate to 1k..."
			scripts/config --disable CONFIG_HZ_300
			scripts/config --enable CONFIG_HZ_1000
			scripts/config --set-val CONFIG_HZ 1000
	fi

	### Optionally disable NUMA for 64-bit kernels only
		# (x86 kernels do not support NUMA)
		if [ -n "$_NUMAdisable" ]; then
			_msg3 "Disabling NUMA from kernel config..."
			scripts/config --disable CONFIG_NUMA
		fi

	### Optionally load needed modules for the make localmodconfig
		# See https://aur.archlinux.org/packages/modprobed-db
		if [ -n "$_localmodcfg" ]; then
			if [ -f $HOME/.config/modprobed.db ]; then
			_msg3 "Running Steven Rostedt's make localmodconfig now"
			make LSMOD=$HOME/.config/modprobed.db localmodconfig
		else
			error "No modprobed.db data found"
			exit
			fi
		fi


	### Running make nconfig
	[[ -z "$_makenconfig" ]] || make nconfig

	### Running make menuconfig
	[[ -z "$_makemenuconfig" ]] || make menuconfig

	### Running make xconfig
	[[ -z "$_makexconfig" ]] || make xconfig

	### Running make gconfig
	[[ -z "$_makegconfig" ]] || make gconfig

	### Save configuration for later reuse
	cat .config > "${startdir}/config.last"
}

build() {
	cd $_srcname

	make all
	make htmldocs
}

_package() {
	pkgdesc="The $pkgdesc kernel and modules"
	depends=('coreutils' 'kmod' 'initramfs')
	optdepends=('crda: to set the correct wireless channels of your country'
	            'linux-firmware: firmware images needed for some devices'
	            'modprobed-db: Keeps track of EVERY kernel module that has ever been probed - useful for those of us who make localmodconfig')
	provides=(VHBA-MODULE VIRTUALBOX-GUEST-MODULES WIREGUARD-MODULE)

	cd $_srcname
	local kernver="$(<version)"
	local modulesdir="$pkgdir/usr/lib/modules/$kernver"

	msg2 "Installing boot image..."
	# systemd expects to find the kernel here to allow hibernation
	# https://github.com/systemd/systemd/commit/edda44605f06a41fb86b7ab8128dcf99161d2344
	install -Dm644 "$(make -s image_name)" "$modulesdir/vmlinuz"

	# Used by mkinitcpio to name the kernel
	echo "$pkgbase" | install -Dm644 /dev/stdin "$modulesdir/pkgbase"

	msg2 "Installing modules..."
	make INSTALL_MOD_PATH="$pkgdir/usr" INSTALL_MOD_STRIP=1 modules_install

	# remove build and source links
	rm "$modulesdir"/{source,build}
}

_package-headers() {
	_aug_colorize

	pkgdesc="Headers and scripts for building modules for the $pkgdesc kernel"
	depends=('linux-kitsinger-5.16' 'pahole')

	cd $_srcname
	local builddir="$pkgdir/usr/lib/modules/$(<version)/build"

	msg2 "Installing build files..."
	install -Dt "$builddir" -m644 .config Makefile Module.symvers System.map \
		localversion.* version vmlinux
	install -Dt "$builddir/kernel" -m644 kernel/Makefile
	install -Dt "$builddir/arch/x86" -m644 arch/x86/Makefile
	cp -t "$builddir" -a scripts

	# required when STACK_VALIDATION is enabled
	install -Dt "$builddir/tools/objtool" tools/objtool/objtool

	# required when DEBUG_INFO_BTF_MODULES is enabled
	install -Dt "$builddir/tools/bpf/resolve_btfids" tools/bpf/resolve_btfids/resolve_btfids

	# add xfs and shmem for aufs building
	mkdir -p "$builddir"/{fs/xfs,mm}

	msg2 "Installing headers..."
	cp -t "$builddir" -a include
	cp -t "$builddir/arch/x86" -a arch/x86/include
	install -Dt "$builddir/arch/x86/kernel" -m644 arch/x86/kernel/asm-offsets.s

	install -Dt "$builddir/drivers/md" -m644 drivers/md/*.h
	install -Dt "$builddir/net/mac80211" -m644 net/mac80211/*.h

	# https://bugs.archlinux.org/task/13146
	install -Dt "$builddir/drivers/media/i2c" -m644 drivers/media/i2c/msp3400-driver.h

	# https://bugs.archlinux.org/task/20402
	install -Dt "$builddir/drivers/media/usb/dvb-usb" -m644 drivers/media/usb/dvb-usb/*.h
	install -Dt "$builddir/drivers/media/dvb-frontends" -m644 drivers/media/dvb-frontends/*.h
	install -Dt "$builddir/drivers/media/tuners" -m644 drivers/media/tuners/*.h

        # https://bugs.archlinux.org/task/71392
        install -Dt "$builddir/drivers/iio/common/hid-sensors" -m644 drivers/iio/common/hid-sensors/*.h

	msg2 "Installing KConfig files..."
	find . -name 'Kconfig*' -exec install -Dm644 {} "$builddir/{}" \;

	msg2 "Removing unneeded architectures..."
	local arch
	for arch in "$builddir"/arch/*/; do
		[[ $arch = */x86/ ]] && continue
		_msg3 "Removing $(basename "$arch")"
		rm -r "$arch"
	done

	msg2 "Removing documentation..."
	rm -r "$builddir/Documentation"

	msg2 "Removing broken symlinks..."
	find -L "$builddir" -type l -printf 'Removing %P\n' -delete

	msg2 "Removing loose objects..."
	find "$builddir" -type f -name '*.o' -printf 'Removing %P\n' -delete

	msg2 "Stripping build tools..."
	local file
	while read -rd '' file; do
		case "$(file -bi "$file")" in
			application/x-sharedlib\;*)      # Libraries (.so)
				strip -v $STRIP_SHARED "$file" ;;
			application/x-archive\;*)        # Libraries (.a)
				strip -v $STRIP_STATIC "$file" ;;
			application/x-executable\;*)     # Binaries
				strip -v $STRIP_BINARIES "$file" ;;
			application/x-pie-executable\;*) # Relocatable binaries
				strip -v $STRIP_SHARED "$file" ;;
		esac
	done < <(find "$builddir" -type f -perm -u+x ! -name vmlinux -print0)

	msg2 "Stripping vmlinux..."
	strip -v $STRIP_STATIC "$builddir/vmlinux"

	msg2 "Adding symlink..."
	mkdir -p "$pkgdir/usr/src"
	ln -sr "$builddir" "$pkgdir/usr/src/$pkgbase"
}

_package-docs() {
	pkgdesc="Documentation for the $pkgdesc kernel"
	depends=('linux-kitsinger-5.16')

	cd $_srcname
	local builddir="$pkgdir/usr/lib/modules/$(<version)/build"

	msg2 "Installing documentation..."
	local src dst
	while read -rd '' src; do
		dst="${src#Documentation/}"
		dst="$builddir/Documentation/${dst#output/}"
		install -Dm644 "$src" "$dst"
	done < <(find Documentation -name '.*' -prune -o ! -type d -print0)

	msg2 "Adding symlink..."
	mkdir -p "$pkgdir/usr/share/doc"
	ln -sr "$builddir/Documentation" "$pkgdir/usr/share/doc/$pkgbase"
}

pkgname=("$pkgbase" "$pkgbase-headers" "$pkgbase-docs")
for _p in "${pkgname[@]}"; do
	eval "package_$_p() {
		$(declare -f "_package${_p#$pkgbase}")
		_package${_p#$pkgbase}
	}"
done

validpgpkeys=(
	'ABAF11C65A2970B130ABE3C479BE3E4300411886'  # Linus Torvalds
	'647F28654894E3BD457199BE38DBBDC86092693E'  # Greg Kroah-Hartman
	'A2FF3A36AAA56654109064AB19802F8B0D70FC30'  # Jan Alexander Steffens (heftig)
	'C7E7849466FE2358343588377258734B41C31549'  # David Runge <dvzrv@archlinux.org>
)
