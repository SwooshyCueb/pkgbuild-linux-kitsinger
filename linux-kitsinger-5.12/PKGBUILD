# Maintainer: Markus Kitsinger (SwooshyCueb) <root@swooshalicio.us>
# Contributor: Piotr Gorski <lucjan.lucjanov@gmail.com>
# Contributor: Jan Alexander Steffens (heftig) <jan.steffens@gmail.com>
# Contributor: Tobias Powalowski <tpowa@archlinux.org>
# Contributor: Thomas Baechler <thomas@archlinux.org>

### BUILD OPTIONS
# Set these variables to ANYTHING that is not null to enable them

### Tweak kernel options prior to a build via nconfig
_makenconfig=

### Tweak kernel options prior to a build via menuconfig
_makemenuconfig=

### Tweak kernel options prior to a build via xconfig
_makexconfig=

### Tweak kernel options prior to a build via gconfig
_makegconfig=

# NUMA is optimized for multi-socket motherboards.
# A single multi-core CPU actually runs slower with NUMA enabled.
# See, https://bugs.archlinux.org/task/31187
_NUMAdisable=

# Compile ONLY used modules to VASTLYreduce the number of modules built
# and the build time.
#
# To keep track of which modules are needed for your specific system/hardware,
# give module_db script a try: https://aur.archlinux.org/packages/modprobed-db
# This PKGBUILD read the database kept if it exists
#
# More at this wiki page ---> https://wiki.archlinux.org/index.php/Modprobed-db
_localmodcfg=

# Use the current kernel's .config file
# Enabling this option will use the .config of the RUNNING kernel rather than
# the ARCH defaults. Useful when the package gets updated and you already went
# through the trouble of customizing your config options.  NOT recommended when
# a new kernel is released, but again, convenient for package bumps.
_use_current=

### Running with a 1000 HZ tick rate
_1k_HZ_ticks=y

### Do not edit below this line unless you know what you're doing

pkgbase=linux-kitsinger-5.12
# pkgname=('linux-kitsinger-5.12' 'linux-kitsinger-5.12-headers' 'linux-kitsinger-5.12-docs')
_major=5.12
_minor=19
pkgver=${_major}.${_minor}
_srcname=linux-${pkgver}
#_srcname=linux-${_major}
pkgrel=3
pkgdesc='Linux with AUFS, pcie-reset, and futex patches'
arch=('x86_64')
url="https://github.com/SwooshyCueb/linux-kitsinger-PKGBUILD"
license=('GPL2')
options=('!strip' '!debug')
makedepends=('kmod' 'bc' 'libelf' 'python-sphinx' 'python-sphinx_rtd_theme'
             'graphviz' 'imagemagick' 'pahole' 'cpio' 'perl' 'tar' 'xz')
#_lucjanpath="https://raw.githubusercontent.com/sirlucjan/kernel-patches/master/${_major}"
_lucjanpath="https://gitlab.com/sirlucjan/kernel-patches/raw/master/${_major}"

_aufs_repo_name="aufs5-standalone"
_aufs_repo="https://github.com/sfjro/${_aufs_repo_name}.git"
_aufs_fragment="#commit=de37efd85da35f0df51707adbeed399b24026406"

_gcc_path="cpu-patches-v6-sep"
_gcc_patch="0001-cpu-${_major}-merge-graysky-s-patchset.patch"
_arch_path="arch-patches-v7-sep"
_futex_path="futex-patches-v2"
_futex_patch="0001-futex-resync-from-gitlab.collabora.com.patch"
#_futex2_path="futex2-patches"
_futex2_path="futex2-trunk-patches-v6"
_futex2_patch="0001-futex2-resync-from-gitlab.collabora.com.patch"
_fixes_path="fixes-miscellaneous-sep"
_ntfs_path="ntfs3-patches-v2-sep"

_kernel_git_path="https://git.kernel.org/pub/scm/linux/kernel/git"
_dtor_input_path="${_kernel_git_path}/dtor/input.git/patch/"
_hid_path="${_kernel_git_path}/hid/hid.git/patch/"
_tiwai_sound_path="${_kernel_git_path}/tiwai/sound.git/patch/"
_iommu_path="${_kernel_git_path}/joro/iommu.git/patch/"
_torvalds_path="${_kernel_git_path}/torvalds/linux.git/patch/"

_lkml_path="https://lore.kernel.org/lkml"
_amd_psf_t="${_lkml_path}/20210713094151.652597"
_amd_psf_s="namit@vmware.com"

_hakavlad_gh="https://raw.githubusercontent.com/hakavlad"

source=("https://www.kernel.org/pub/linux/kernel/v5.x/${_srcname}.tar.xz"
        "https://www.kernel.org/pub/linux/kernel/v5.x/${_srcname}.tar.sign"
        "${_aufs_repo_name}::git+${_aufs_repo}${_aufs_fragment}"
        "${_lucjanpath}/${_gcc_path}/${_gcc_patch}"
        "${_lucjanpath}/${_arch_path}/0001-ZEN-Add-sysctl-and-CONFIG-to-disallow-unprivileged-C.patch"
        "${_lucjanpath}/${_arch_path}/0002-x86-setup-Consolidate-early-memory-reservations.patch"
        "${_lucjanpath}/${_arch_path}/0003-x86-setup-Merge-several-reservations-of-start-of-mem.patch"
        "${_lucjanpath}/${_arch_path}/0004-x86-setup-Move-trim_snb_memory-later-in-setup_arch-t.patch"
        "${_lucjanpath}/${_arch_path}/0005-x86-setup-always-reserve-the-first-1M-of-RAM.patch"
        "${_lucjanpath}/${_arch_path}/0006-x86-setup-remove-CONFIG_X86_RESERVE_LOW-and-reservel.patch"
        "${_lucjanpath}/${_arch_path}/0007-x86-crash-remove-crash_reserve_low_1M.patch"
        "${_lucjanpath}/${_futex_path}/${_futex_patch}"
        "${_lucjanpath}/${_futex2_path}/${_futex2_patch}"
        "${_lucjanpath}/${_fixes_path}/0001-net-sched-allow-configuring-cake-qdisc-as-default.patch"
        "${_lucjanpath}/${_fixes_path}/0002-infiniband-Fix-__read_overflow2-error-with-O3-inlini.patch"
        "${_lucjanpath}/${_fixes_path}/0003-kbuild-add-fcf-protection-none-to-retpoline-flags.patch"
        "${_lucjanpath}/${_fixes_path}/0004-mm-Disable-watermark-boosting-by-default.patch"
        "${_lucjanpath}/${_fixes_path}/0005-mm-Stop-kswapd-early-when-nothing-s-waiting-for-it-t.patch"
        "${_lucjanpath}/${_fixes_path}/0006-mm-Fully-disable-watermark-boosting-when-it-isn-t-us.patch"
        "${_lucjanpath}/${_fixes_path}/0007-mm-Don-t-stop-kswapd-on-a-per-node-basis-when-there-.patch"
        "${_lucjanpath}/${_fixes_path}/0008-kbuild-Disable-stack-conservation-for-GCC.patch"
        "${_lucjanpath}/${_fixes_path}/0009-pci-Enable-overrides-for-missing-ACS-capabilities.patch"
        "${_lucjanpath}/${_fixes_path}/0010-ZEN-Add-OpenRGB-patches.patch"
        "${_lucjanpath}/${_fixes_path}/0011-tty-Allow-setting-the-number-of-available-virtual-TT.patch"
        "${_lucjanpath}/${_fixes_path}/0012-scsi-sd-Optimal-I-O-size-should-be-a-multiple-of-rep.patch"
        "${_lucjanpath}/${_fixes_path}/0013-iomap-avoid-deadlock-if-memory-reclaim-is-triggered-.patch"
        "${_lucjanpath}/${_fixes_path}/0014-xfs-log-stripe-roundoff-is-a-property-of-the-log.patch"
        "${_lucjanpath}/${_fixes_path}/0015-xfs-separate-CIL-commit-record-IO.patch"
        "${_lucjanpath}/${_fixes_path}/0016-xfs-journal-IO-cache-flush-reductions.patch"
        "${_lucjanpath}/${_fixes_path}/0017-xfs-Fix-CIL-throttle-hang-when-CIL-space-used-going-.patch"
        "${_lucjanpath}/${_fixes_path}/0018-xfs-reduce-buffer-log-item-shadow-allocations.patch"
        "${_lucjanpath}/${_fixes_path}/0019-xfs-Skip-repetitive-warnings-about-mount-options.patch"
        "${_lucjanpath}/${_fixes_path}/0020-nfsd-Ensure-knfsd-shuts-down-when-the-nfsd-pseudofs-.patch"
        "${_lucjanpath}/${_fixes_path}/0021-xfs-No-need-for-inode-number-error-injection-in-__xf.patch"
        "${_lucjanpath}/${_fixes_path}/0022-xfs-type-verification-is-expensive.patch"
        "${_lucjanpath}/${_fixes_path}/0023-xfs-only-reset-incore-inode-health-state-flags-when-.patch"
        "${_lucjanpath}/${_fixes_path}/0024-NFS-Fix-up-the-support-for-CONFIG_NFS_DISABLE_UDP_SU.patch"
        "${_lucjanpath}/${_ntfs_path}/0001-fs-ntfs3-Add-headers-and-misc-files.patch"
        "${_lucjanpath}/${_ntfs_path}/0002-fs-ntfs3-Add-initialization-of-super-block.patch"
        "${_lucjanpath}/${_ntfs_path}/0003-fs-ntfs3-Add-bitmap.patch"
        "${_lucjanpath}/${_ntfs_path}/0004-fs-ntfs3-Add-file-operations-and-implementation.patch"
        "${_lucjanpath}/${_ntfs_path}/0005-fs-ntfs3-Add-attrib-operations.patch"
        "${_lucjanpath}/${_ntfs_path}/0006-fs-ntfs3-Add-compression.patch"
        "${_lucjanpath}/${_ntfs_path}/0007-fs-ntfs3-Add-NTFS-journal.patch"
        "${_lucjanpath}/${_ntfs_path}/0008-fs-ntfs3-Add-Kconfig-Makefile-and-doc.patch"
        "${_lucjanpath}/${_ntfs_path}/0009-fs-ntfs3-Add-NTFS3-in-fs-Kconfig-and-fs-Makefile.patch"
        "${_lucjanpath}/${_ntfs_path}/0010-fs-ntfs3-Add-MAINTAINERS.patch"
        "${_lucjanpath}/${_ntfs_path}/0011-fs-ntfs3-Fix-unsupported-flags-by-clang.patch"
        "${_lucjanpath}/zen-patches-sep/0001-ZEN-Add-VHBA-driver.patch"
        "${_lucjanpath}/zen-patches-sep/0003-ZEN-vhba-Update-to-20210418.patch"
        "${_lucjanpath}/clearlinux-patches-v3-sep/0017-xattr-allow-setting-user.-attributes-on-symlinks-by-.patch"
        "${_lucjanpath}/ll-patches/0004-mm-set-8-megabytes-for-address_space-level-file-read.patch"

        # https://git.kernel.org/pub/scm/linux/kernel/git/dtor/input.git/log/?h=for-linus
        "1001-Input-xpad-add-support-for-Amazon-Game-Controller.patch::${_dtor_input_path}?id=05665cef4b745cb46b1d1b8e96deaa25464092d3"
        "1002-Input-xpad-map-Select-button-on-Microsoft-Xbox-One-c.patch::${_dtor_input_path}?id=0b1d6c8c00157cbfcf343925c4de81af0187a7b7"
        # https://git.kernel.org/pub/scm/linux/kernel/git/hid/hid.git/log/?h=for-5.13/core
        "1003-HID-hiddev-Return-specific-error-codes-on-connect-fa.patch::${_hid_path}?id=9951bb259dd0794db39beb63899104da9579efcc"
        # https://git.kernel.org/pub/scm/linux/kernel/git/hid/hid.git/log/?h=for-5.14/core
        "1004-HID-replace-outdated-HID-numbers+comments-with-macro.patch::${_hid_path}?id=eb134536cf6fb2e50b5ced653f7c34d306b2d73f"
        "1005-HID-Add-support-for-Programmable-Buttons.patch::${_hid_path}?id=bcfa8d14570d85c998a9b706b074ab151b286edf"

        # https://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound.git/log/?h=topic/virtio
        "3001-uapi-virtio_ids-add-a-sound-device-type-ID-from-OASI.patch::${_tiwai_sound_path}?id=0ae0337f929a970ee8d83e0e95e6b8d05562ce3b"
        "3002-ALSA-virtio-add-virtio-sound-driver.patch::${_tiwai_sound_path}?id=de3a9980d8c34b2479173e809afa820473db676a"
        "3003-ALSA-virtio-handling-control-messages.patch::${_tiwai_sound_path}?id=9d45e514da88ff74fc24ffb34e7d6eb92576440b"
        "3004-ALSA-virtio-build-PCM-devices-and-substream-hardware.patch::${_tiwai_sound_path}?id=29b96bf50ba958eb5f097cdc3fbd4c1acf9547a2"
        "3005-ALSA-virtio-handling-control-and-IO-messages-for-the.patch::${_tiwai_sound_path}?id=f40a28679e0b7cb3a9cc6627a8dbb40961990f0a"
        "3006-ALSA-virtio-PCM-substream-operators.patch::${_tiwai_sound_path}?id=da76e9f3e43a7195c69d370ee514cccae6517c76"
        "3007-ALSA-virtio-introduce-jack-support.patch::${_tiwai_sound_path}?id=ca61a41f389c80db091db9d4ad5a651e2b4c9f70"
        "3008-ALSA-virtio-introduce-PCM-channel-map-support.patch::${_tiwai_sound_path}?id=19325fedf245ca932c58a629d3888a9a393534ab"
        "3009-ALSA-virtio-introduce-devices-suspend-resume-support.patch::${_tiwai_sound_path}?id=575483e90a3292c2afceb7161732046e411d6fdd"

        # https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=4f9701057a9cc1ae6bfc533204c9d3ba386687de
        # https://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu.git/log/?h=iommu-updates-v5.13
        "4001-iommu-iova-add-rbtree-entry-helper.patch::${_iommu_path}?id=7ae31cec5b70e301788b95de543abb56748dcfb6"
        "4002-iommu-iova-Improve-restart-logic.patch::${_iommu_path}?id=371d7955e3102fe38daf06de4ed9bfd29864354b"
        "4003-iommu-amd-Remove-duplicate-check-of-pasids.patch::${_iommu_path}?id=3e84f878b56b075b9a81de6e73da7b3dc88387d8"
        "4004-iommu-Separate-IOMMU_DEV_FEAT_IOPF-from-IOMMU_DEV_FE.patch::${_iommu_path}?id=34b48c704d194738eef0893aa06e412bdc8a972f"
        "4005-iommu-vt-d-Support-IOMMU_DEV_FEAT_IOPF.patch::${_iommu_path}?id=9003351cb6bde752de774e6ec874109493413152"
        "4006-uacce-Enable-IOMMU_DEV_FEAT_IOPF.patch::${_iommu_path}?id=0860788df74085a5e14c1702610b2977fd9aac5e"
        "4007-iommu-Add-a-page-fault-handler.patch::${_iommu_path}?id=fc36479db74e957c4696b605a32c4afaa15fa6cb"
        "4008-iommu-amd-Move-a-few-prototypes-to-include-linux-amd.patch::${_iommu_path}?id=fc1b6620501f1a4b88f583549c63666180bea177"
        "4009-iommu-vt-d-Avoid-unnecessary-cache-flush-in-pasid-en.patch::${_iommu_path}?id=8b74b6ab253866450c131e9134642efb40439c91"
        "4010-iommu-amd-page-specific-invalidations-for-more-than-.patch::${_iommu_path}?id=268aa4548277a1e50f326c6fbca75dd1073574d4"
        "4011-iommu-amd-Remove-duplicate-check-of-devid.patch::${_iommu_path}?id=45ed93374a3a66ed35412f18fa356b3550c9f622"

        # https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=96c132f837ff0639702d04d229da190f636a48b5
        # https://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu.git/log/?h=iommu-fixes-v5.13-rc3
        "4030-iommu-amd-Fix-wrong-parentheses-on-page-specific-inv.patch::${_iommu_path}?id=a017c567915fd7a017006f8c210e2c6b30ab6fad"

        # https://lore.kernel.org/lkml/20210713094151.652597-1-namit@vmware.com/T/
        "4070-iommu-amd-Selective-flush-on-unmap.patch::${_amd_psf_t}-2-${_amd_psf_s}/raw"
        "4071-iommu-amd-Do-not-use-flush-queue-when-NpCache-is-on.patch::${_amd_psf_t}-3-${_amd_psf_s}/raw"
        "4072-iommu-Improve-iommu_iotlb_gather-helpers.patch::${_amd_psf_t}-4-${_amd_psf_s}/raw"
        "4073-iommu-Factor-iommu_iotlb_gather_is_disjoint-out.patch::${_amd_psf_t}-5-${_amd_psf_s}/raw"
        "4074-iommu-amd-Tailored-gather-logic-for-AMD.patch::${_amd_psf_t}-6-${_amd_psf_s}/raw"
        "4075-iommu-amd-Sync-once-for-scatter-gather-operations.patch::${_amd_psf_t}-7-${_amd_psf_s}/raw"
        "4076-iommu-amd-Use-only-natural-aligned-flushes-in-a-VM.patch::${_amd_psf_t}-8-${_amd_psf_s}/raw"

        # https://lore.kernel.org/lkml/20210819004305.20203-1-deepak.sharma@amd.com/
        "0000-x86-ACPI-cstate-Optimize-C3-entry-on-AMD-CPUs.patch::https://lore.kernel.org/lkml/20210819004305.20203-1-deepak.sharma@amd.com/raw"
        # https://www.phoronix.com/scan.php?page=news_item&px=Linux-Broke-Android-Apps-Pipe
        "0000-pipe-make-pipe-writes-always-wake-up-readers.patch::${_torvalds_path}?id=3a34b13a88caeb2800ab44a4918f230041b37dd9"
        # https://www.phoronix.com/scan.php?page=news_item&px=Floppy-Disk-Linux-5.15-Fix
        "0000-revert-floppy-reintroduce-O_NDELAY-fix.patch::https://github.com/evdenis/linux-floppy/commit/c7e9d0020361f4308a70cdfd6d5335e273eb8717.patch"

        # le9 stuff
        # pretty confident these git repos aren't going anywhere
        "${_hakavlad_gh}/le9-patch/9bde939dc9952f2a2b8df46e8cc19e2f6710caef/le9ec_patches/le9ec-5.10.patch"
        "${_hakavlad_gh}/disable-i915-gem-shrinker/4e6da2a9b0602d3f80b418026d0a8bf188fc0de6/disable-drm-i915-gem-shrinker-5.10.patch"

        # https://clbin.com/VCiYJ
        "0001-pcie-reset-kludge.patch"

        # The rest of the patches came from random git repositories. In my experience, random git repositories tend to
        # vanish, so instead of pulling the files from the repositories, they will be included in this one.

        # https://github.com/Frogging-Family/linux-tkg/pull/206
        # https://github.com/kevall474/kernel-patches/tree/main/5.12/misc-patches
        "0001-mm-Support-soft-dirty-flag-reset-for-VA-range.patch"
        "0002-mm-Support-soft-dirty-flag-read-with-reset.patch"

        # https://github.com/kevall474/kernel-patches/blob/main/5.12/misc-patches
        "vm.max_map_count.patch"

        # the main kernel config files
        'config')

sha512sums=('2d010d6d75052083300b1a629dbec25a39f6314a1871ed355133bb59946453915a2265f4ba26e60119ee0d05abb9859c5ee7d8fb8dd816c476ebfdb76d3399ef'
            'SKIP'
            'SKIP'
            '89f230ad9090c9eae3795d94049d33be1b4f6b3272db3fe7ef569d5d925eaa86e7990be5a20b53969f5ba7f6876d1c34bca68b07790d75b88c686139d1b41862'
            'dc6e19ca9e43ecc94e3fd4eb2c6c6fb40e802f22eae707b091e8d5c4a80603cd5c6236072b5759234226369066ab276ef56514b65dc2a59ea18ff47c6e36108f'
            '6b67c87e6480664844e35d001169b0238279789c0cef3b0d4b0acef87a6c4d0eaf62ceacdaf98ed5358f813c9955212fa34c925cdf21b4bf2c0b74d76d15ccde'
            'c189f8833280fd1751d2013b486be48f71d691204ba3a774842a6e7ebf72f83ca88b42914d841479e5a09dfa05a302b17bd20712e3787086290810895fb64659'
            'aba9f959ad1a698e1e6230ad3be1df4173cd731a8d1b822523185387a6dde00dba6e4f0facf44bf4d6004b236627914374384508c933f46a94bf3b936b514516'
            'd60e24ef65402bcc9c10e424eeae5fe033f08c4a12d98299e885109e9e9cadbf726fc083bb3dcd0b5d821e7ee84aa1feb97695c7905f202bc0bbe4f3e5104fee'
            '9d8dc471c35c868794dbed30df0ba95e856707d48bc53d0f15b6dcb6659faf389a56ef4177f3961a45c864bfd224add4e126640f9283898e4d836c3180935450'
            'fb84fc91e6be7b696aaf98177a124c321673c5e43c80daad8590faea13500624f5e759dac44a0eb6b6003ccccb793ca34ce27c65ccc96fb7253b0b3038df68cf'
            '4b7766c590a692a008a0daca73806a1671a81b6e2ed756aae96de4c4455505b04765568ae5e04645f89bf75bd5611e3b1bf5ededff47bb0708dbca91769b5ab7'
            'e059b87b71f7c0c75aa580fe87dbd8b49cd30e4daf2f3002a957963a59fd4e1336d24d9e6d2f10ed15b95e4a95531de38dbd1fc6893803f1943374ca788a9251'
            'b49059280ad4e2093b1ad80fbeab8d2fd157ae2cbb31340ff83d5e5dc1f3706cd7ab9c07fb45b116b0debac0411519dc500bbd63ff843dbf31f6f25d531ce9d3'
            '9a93aa7e07ae7da26977224819d8afd23b8822f24608c6ea7330d6f8ed7e1765bfc6afaedacc99e8629e321b86c7381206492ddb058eb1626ba3d56a87ab579f'
            '74c726a5c55d76f4e4313121934f9e52557920e0bd7bebf4fffbe1532c9fdcd4b71cda98384630d339050e51511eb4f6ba91ad1cf9c40f2d54066148bd5f93b4'
            '988a99fec5fa38fa8e3370d870098774e345497eecad978ec89bb23cd491ff1686ea8197d82e03a7b52a6847d966d3371f017ebc01969441cfe14d0564bfdecc'
            'f1578e12fa0af8820373a60cc919d367673f82470d5978a1119f4b08a9d297eb82471eb7ff43626c49dc67547d78da6f3e49abe4186c5685fda881e7ab66c2ba'
            '12c08e0593f702d12a06fd2370f15b25ee03f1ede4b909bb4a96133237a1630523a6f285a45cc3c226b2b535ead3562c7f0a24b5d8d06e60b54548587fb102ce'
            '42b90976224b392d2980ce7e84d58a00b8b26b888adc6af8d9df89395f37080a22b4cce304f4e6927be03cda27105f267b5be46c2ff0d38ad83b624df5d913bb'
            '7667958a876f6c75827968b8556f6c960999c84994a84fc57de597a99d0b41073ce1181b084e39980d7d8cd1e07ddbd5841cb6dbf30621c302b897f6d9075c22'
            'a02e6ab6cd02de41e0251984aee5371bf8396860788858b8459c9dad73864f3ddb4f5666399899033a25586b724ed71da9536b217f118882411cdbeaf4105d86'
            '714df6f1169eb75fa87b6b2ffe8df7e8d62da9e7bb5985ed2feea7567b1157ab3a84608dd8bf03e357ef05dd57ced5d456497fc031a3a5f0b3527363ffc4615e'
            '5dd589c6bc1305430ac6e1f587d1700cf6ec2c92513a9f274f7066dd290a52f624f3a5e5fda6b170b228fb32bdc213cf3c12be780d6df7d3e846e63ca3c2a872'
            '0ff17160713e260b768207062c74fc7348b485d8fd1021348e62a4d7fbb9c8fd0cd8bf35d5121a66ac0f4827e5ec9bd83ea05b9e0bf9b1632f90b11a5604cf4c'
            '6508dd64d91fd3e4054081a0020df2d20421a0811c86d7d4d65ec0a50d73ee8513adb7ed711635f15a1e5cb2d773259acf85d4ad53ffb790bff0fb6a0376400f'
            '96f3ae8798632b4552116c2e629953cc1d3de1d26542a42e33bedaa740e9455e79c68e437c9f38452c1aa0a8bf2de4a1926b6088adbbeaeb2def867c82e95156'
            'f036fa75948cb588d44dbe728f50dc8bfff344a991d5fe9c4c229ea7aa84fe656022cec96c56c2629286d9f506e1eeaf089ecc3448460bc108292bdfb02079a5'
            'ec10d58c60450aebaa7d73ca9ab6ab11d5c9001c685b8939c603005d361defa1eec1f6e97ec352b8f8026879ad198cc08f164668897fba7bf6bf25df836560a5'
            'bc3cdd662b0dbe5d467000ed8880fc2a19a03cc537ed82d41676468c14d5e0f7e73f9e8810ebc7fc845960af13639d2027ebd970ff809e521ca3f0c73cbae7f4'
            'c89620cee8f5a6946527e18d1e76a899ac2b21d78bbcd51a5703229d8bd23d73a731a32b755568ea2aa2efc1bb8cb9a79b769d712431d68ef59cc9e556f5a54d'
            '36c253a867d8ad24ec64ee61a0181e6228550cbe3701ccccdf0d5e05d448997c7de21c1e177b9a4bcbd205f603bd56d5c818a65f99e0754c0eba4e7c63430b83'
            'c03a2f4e553ba9b9f00ad3661136cad85a41ebf75ffa6cf43f6d3a47be8e27eabaef827ff528d5d2cc4fd31de0e0a1dc1a435842cf913b53d99c3734040ff998'
            'aaee9150262ed81944836cf3dd41447bf5e15baeca21567dca3b7cef2ce2973ea76c4db8d16d73a8e1ac320f4bfc71c118b2a8ac51a83314f9043e661614812d'
            '191572ab7710e598115f340bc4d5ca013878f43df26db756aabb3222c4ff3ab8dbad2630a5b2d44fba6ee5acf3898520b526060ce5cfe3b6eed7cdb9d0821f41'
            'cda9b1bf0c298a854a6fea239bf07e123985fd65100bd1f03917f0e3f79ef0458c33414e7ca46d167e6dbae73d48da5ef1b055103db93f3b11c4a24cec905f40'
            '105ba53d2963406a687140ad5f95921e8f8f34faddb56de6a50da923c5bf8c0801e7b9ec7dbe47fa9671de624816f9242b3a7cf8b5b4e1f0036fea4167695ef9'
            '349e085bc56934dfe3d3c70a67ae21a4f45a590573260243fc8c1f4ddd450f8b738d668ea807ad2459bf971bf0afa0eedc9d364577fed7e3c4e9dd9c51f49f95'
            'a5e9d42b177982a1d245559a2811f81636e64e7b160ea64965c4f4ea33aa52e851b63b9d49b4391ad2037b5e2fc7cc74eb183882e48de87c4e492de45b131baa'
            'a3f7856a301bf334a0a7eff0d72a92775321249bc91a31645063d934390025b56a5c87aace6bc09b3b288312cbb565062d95ea2320ae3684dd0f3e6b8a68f4cc'
            '12cde4e66044fc5230e53d028f0b5a2a5118b52fa85e0d69690998c99230e695e9c27fc0a642acc18d52ba260955fde0428e11b21284b58c222f99f50ac6bbd6'
            'b909627c8817b7f5ad8ef850f65a2a5600b5f233472221387a71cb149cb8f20899904ce8ab6b7df79277a5a0f353aed10ccd7d14ce5a6ee5f52305ce93dfaae5'
            '10a86094d38db8933aa1038c2b05bfbf309c0e0a027d74cdd39d47493e56d950d3238e331dc1f480f348ab4e959572d1a338da2d9bdae29794978ec7f82a8501'
            '04ff1d1a6c28c8b2b45bed2cd8778f6831cde1dd5a8abb7e9004768a7124ba68281742187bd4c22211b33c99c92547d1c9ef6137e3a96d3689dbcebaa1e2eb38'
            '6aecfe2a2d31b5f0c741c6988c22094e90dea9c52a351154735cdfabb7887e85e4db2dbb846dc0c2b46e172b493bcf9321c1add83b4489794022ea5fcefa9fb0'
            '9c242b911305f5fe4a35a10ba2e902ce1e4ec4e4f520858a4668321c6a13d5d8a5cae3ac1324df2f48e81e432abcbc5127d1aacaadef2c5cb3105abc2b8bfaf6'
            'c3c1651920bb0823927fe845b03b4f3c269e1b858a7d46af5ae7f924330106cb1511fae8c0864510d155a81466f79834c5293e2212323f2e9f8c507e795de9af'
            '048b88a1ed1e6509298f3ce2e99e5252e25a9b1e0c5c0a309e2cbf7ae0fe475a24b2c2f1face6f1ce1c11b6c535e2f50eafb4cb2d498023bb7863989d966431d'
            '2f127bec35a561d02f22c09811d7f4b65e53fadfc482d6385d7c8a207062c8d4baebec9387c44c8ab3aed0b6cfd7997f5e77209ae84f74a72e9560cad44fe7cf'
            'cbd659f33bf550de0d0114c96ee3b4ceb9726211baaaebbbfebcf2f2bf4c5e14fe9a9301439684dc79a2a0e577c1a12a793b0c823b80d206a23d95c10a0b93ac'
            '626c344d643c61007cb9d8b93fea16b221898bf40d4ced3d35ab518f373d5cad102770599729af295b5e91a95a145c5c058d5423352441c5b047367103a70016'
            '94f14b558662ce39aceaa530568c9f7c4353d13bccb3906cd7a6cdae3b3508177032f4cb62c5c44d5056522f8f78a4d6336d563d4a88d0b1cdfd1c2af8a693f9'
            'f32019713771f75c5a147224ca367a5406ed375cf6de14485b86be2d5491a242b428a0daf206aceaaa5662181713ebc9518d240b5444a84d9697212c8caa0b1a'
            '5c84fd297976fa4d11cc0e0cb905327647d579f9eef36fbf55722b7cec5b2ec65fcceb3c2a3c738408e6a76468267765ec9f346de6ac6b439a8860835ee99217'
            '283fa4ba86ca637406fd4d01222d7c187d974c62ec081f833318e3b76c4bcc3d60905dc3a7b3917fef8f2009361fb2fc3c1bbaed0d8c48a824ae17bb0df8a6f3'
            'e129b45b6826927aff8d416e1a1c3faf79e3d5e905c4ca22988b92c54b351cc3c081de155577ec89f00b4b243cd3bce06b31963798fdcfd1248c0fc7ba3428c5'
            'a00ca119738084a04a6b3db2efe6409912fba87ee4ebcc65cae3742003a4d70708ac2cd323af9155e824aadb062281ac9a0e52c1912a244f98e3f731caa950fa'
            'd16b077ebb4a1e2052f0ba1848555328b4e5240cb8407a29649fd0125e9bfe5f2e885334911c4c2db2ed0d58ed1b0ab3947a11b1df396df1be22428534f5d931'
            '939536530a45f9c32b52c631d63b6e85c730dfad6f134e40282e8cb9282c3da28c5738c0d6566a5e456c113ab3c7206fccb6dd607912848bb5a7f1768e3c5f1f'
            '22ddae85fe7241fd6636f024125302087b9500097980739f8d1b2a8c103399af44f08200149ddaceef2566f304c50c17cdf1752f68ada003a946300b2a15bb9b'
            '2dc5ed9ef2b0c8a8140bd8d64a1e6f592e3d985874ef7ffda26dbcadbef5cff3c41319da2f9221aa58151d25b9c8ec6270e66ca0b09bb577547cd0ca2cc8a1d5'
            '38449e486f8af25345320547151b146fe03c9716c4e6d6e8301ba9b3caa29446cd749ff7cfd5499e8340d6542db13c0824f5fcffedbb316dbcc8decb2715256a'
            '8aebe0d9c658c23d578930a5c77ac09b20a126e26eb130b34305d32cb7e5a557f260cc888804d15f48cf476abcbfd00f6f6a6b1b9a793a0b5768f57a78fab463'
            'ee7080e020a4d3268b1ca1215a48876ac374d9d3e75d8ab7ca2c62e2bddea81985ece78a38a2a4d7ba0d90f60c0e83c7cff751ddaa46c7fefa2b64f8ea84e007'
            'cb36af88022782fb6a9f8fe704b7ab09c4e7907decafca66614da9183a9053d1589b09b71312d91e506a47aee6a918560b59a34eda137c199b8afba4964e2344'
            '6bb98ce1a36f8ec02d48228ca0ae60376b26ce7b8cc463b721463f2cfa9a6d174e0eb9ac7f3f37da255111d018dac1560e46f8180238529a4524a4eddb171745'
            'a82d0288338d75b26180aa610e61b5918a565ad56776c9dfdcc3a16b35072411b9ea63c85cf90f1a4ced4961b7e59a2d48204c5ed15b5f0df08ec69584e167ed'
            '7ab2a92fd1b771bb426723ffec01ab3d587f349c98d48ba34bdede7c330e1f238caac2b753d25818d6da37d5b719ba1bc1af8cd3d87fd6900ed59e5243b69ac4'
            '738b96d0b18b566d858bc6ed1b9a8135c0ceae5f866b6a8b952d79a9fccbbe357099a89bb2344b64c76c2abc68e0b4ece723fb7a8c26b944f725d84aab75b1c3'
            '81a28834cf9b1ef658dd1ce5dcc76d8944f4b0f1be7aa70c16b26095be8ab319187428d76c27049f7ad2e84e35fa379596418e05ea15f707d94056f5802faa9c'
            '36bd683d308fa79a68b4ffc4a718fe2d576c7ccb2b620d6c51c3a122a90d508b92cab48245646e2567c2498edef25e5fab887aa3adf37fc9947f74db19f19184'
            '569aa5d8875e88075eb91c5b93dbacc4d7b8a225cb5bf31076d172476aa3139ffa686c207680c848e3bb2e05b52c84ea67538b427727e6eb00d9c33ad06abed3'
            '007d3ecca366eb3de46c52a9cb726ae7b068eb09648943f9fbfc5bc8765cea2595f7474e57c64aad8f81a065bcc7c9afe701dd800d23ecf99776ec358d203c82'
            'f8516b218af68a4806a9adf6e753fcb72224b08915a154808d897d317b91959c23763bb275ca4f62c410fb35ebc62360f6ce6a529b0ca9165a23ecf1ca1c442c'
            'a1000b6403d4867ee211eb36e2b2331ca427ce46447d24eb5403a6c6144d308516837bf533d3433a250a4dcc77ff5ce616472e74945b870648253e170d5fe694'
            '0ff5670a4dcc30898d605977681f08d49355853effc193746117feb37eea9b10390d7de837ec91b306bee73a071b7c52f9ec0eef08631e42e76008d61a7ef70e'
            '83e5f62804fb358cf6000d154f3da7c1a70fd00536f7f6221a8bf2bf247602008daca7ffbadb63e2c088afc41362a1369da873fc8d6bdbab8e6a5bb9150d3589'
            '6fbdddb450423b600cce4d758d25582401a1bbf12af4c3177790ffa3692446c1080dbb83f6340a446822702bd5bdeff321530deb57f4adf74fabf0b8249fc294'
            'e9cb59f365fe451a71c389b6af0e27276953ebce35da4cec20c644190cd88e1827750e7ce4d6acc7c7f1eaf1fd36f21b8d069fe5b30415610966a3d8c27e3802'
            '4de64d387ccfef1a99cd6888174482046fde22068dbfc01e5f668a3e15f165f0288b8dbac617e6c048de1e8190d45216a109be503101c04b2bb73d013134af01'
            '07d56aba64ce2e38ff5d401f2412231bf0aeffbb50efceb1895298370a95b054d949ecdea41edb4f3830135d877f1deb2a297906ad708bfac0fe8b49d8cc31ce'
            'f50783a598af073af4e1bf10dfff219f2bc75a35f1dc761872252e64a51c773c98acf79e67d7064b2e0e5be59765e749970be8120ce35a11553f26f16e6bc211'
            '5a1c8db1f4be34d03183d472ca89789fef40c642758493d2e1c5281630fcbf3d9641134f5478faf73e9b0d4a73784f834b154a51979fe3d274456251c422f966'
            'c198734271a5532358399e22c69689b5e8ca82a4da5a91132d846caf495cd9730a6f75ba0f30406e1fd4298ad587a15c53965daa5f11851d7a44c53d6199b526'
            'e71828794e4f5dfb83765d4d511c60975fcab2f0b3f2fcf17c07845e5a408d1fbdff20020ddc78c4754b36d5771dfed596e2f25bc36d2ca083bc8ddb70816885'
            'd61eb2985239e2b37a73203071a495465c12aee0a7177bba2ebc901f93758c109bbb708f7b1f20ec204dc3f198941ee9e4a7278fbf2bbf45ad6de1684643e80c'
            '2ee63c8e82db5d7e0119875ae93a63b9ab23e070db34358b5b3f41c2a0a6a293b4914cbe2bd001262834d16a9bf8aad952f3809c9c32cd9d454d770a115131b6'
            'ceced0b0c7ffb3d4b157bc9fbd4f6d1dcba63a328f459edfd4800458b21bb07d617d87faa2e26e01330336a77a486ff1b46fdc99a4271c3792d4a56c8bcbf347'
            '9f7899d2ad0192688494da33a9ec5aa60dae6aa22ce78f47331b49fd8bb012e9e9f15d47af944ef93e91566b20c4ea788b1359effed6f8c6dfbf5a91a4fe0efb'
            '5156083c4e764bf47d46c6bb5fec958a22f88c4842c4549d6992e663ff0c7caf9af616c0949f0905d93c768005ebdfc39b6a129ef2a50e5f9dc600a34ab9ec76'
            '310654b8bb11aa1af48d6fae21d0c6bcfe9f06c27828274c5749d0ab0d759e77441e8b5323b8c6665b23161c9d35c4a9743948cc1b474deb3b1d2c98752cbd97'
            'f55ee2f6c4f65a90fe3f59ce3afd5f48b330a3e4b7a3f94a2f61afc39f8c979f4ab398d1fe48bb621ea0a7aaf2f23762f97ff4d424165d8e3d39f43b72a0eefc'
            '9193db6debe578bd69c338b24bcfa26e0ae719a78c5f63b442d02d7790ee59397eeb85fe683ed96ad053ab784c9860295c0d149405cb826031b6eb129ca45a0a'
            'f2748495022b16ef93835b34bba1086b415bf90833836b150e0cae2652f6101c337895699476eb98a9ba5cb2eca9dfe9c9bcc2a23cdbc31bc402ab498fac48d4'
            '0aa6eca5aa28f600100c0ee21154ab638a9d96cbb39a6ae2f4abdc080320480fb9a6df488bcb9d9a79fe295eb095fe6773230a6583f89786d7132c232ca30628')

export KBUILD_BUILD_HOST=archlinux
export KBUILD_BUILD_USER=$pkgbase
export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"

_aufs_patches=(
	######################
	## Required patches ##
	######################

	"aufs5-kbuild.patch"
	"aufs5-base.patch"
	"aufs5-mmap.patch"
	"aufs5-standalone.patch"

	######################
	## Optional patches ##
	######################

	## Add support for nested loopback mounts in branch-fs
	#"aufs5-loopback.patch"

	## Make /proc/mounts show all mountpoints
	## Does not exist in the current tree?
	#"proc_mounts.patch"

	## Prevents assignment of 0 as inode number
	"vfs-ino.patch"

	## Keeps tmpfs inode number low
	#"tmpfs-idr.patch"

	## required for LOCKDEP
	#"lockdep-debug.patch"
)

_aug_colorize() {
	# prefer terminal safe colored and bold text when tput is supported
	if tput setaf 0 &>/dev/null; then
		_MAGENTA="${BOLD}$(tput setaf 5)"
		_CYAN="${BOLD}$(tput setaf 6)"
	else
		_MAGENTA="${BOLD}\e[35m"
		_CYAN="${BOLD}\e[36m"
	fi
}

_msg3() {
	(( QUIET )) && return
	local mesg=$1; shift
	printf "${_MAGENTA}   +-${ALL_OFF}${BOLD} ${mesg}${ALL_OFF}\n" "$@"
}

prepare() {
	_aug_colorize

	cd $_srcname

	### Setting version
		msg2 "Setting version..."
		sed -e "/^EXTRAVERSION =/s/=.*/=/" -i Makefile
		scripts/setlocalversion --save-scmversion
		echo "-$pkgrel" > localversion.10-pkgrel
		echo "${pkgbase#linux}" > localversion.20-pkgname

	### AUFS
		msg2 "Copying AUFS build files and applying AUFS patches..."
		local aufs_srcdir="${srcdir}/${_aufs_repo_name}"
		local kern_srcdir="${srcdir}/${_srcname}"
		pushd "${aufs_srcdir}" > /dev/null
		cp -r {Documentation,fs} "${kern_srcdir}"
		cp include/uapi/linux/aufs_type.h "${kern_srcdir}/include/uapi/linux"
		popd > /dev/null
		local aufs_patch_fname
		for aufs_patch_fname in "${_aufs_patches[@]}"; do
			_msg3 "Applying AUFS patch $aufs_patch_fname..."
			patch -Np1 < "${aufs_srcdir}/${aufs_patch_fname}"
		done

	### Patching sources
		local src
		for src in "${source[@]}"; do
			src="${src%%::*}"
			src="${src##*/}"
			[[ $src = *.patch ]] || continue
		msg2 "Applying patch $src..."
		patch -Np1 < "../$src"
		done

	### Setting config
		msg2 "Setting config..."
		cp ../config .config

	### some initial configuration
		# (we start with the arch config as a base so I can keep track of stuff easier)
		scripts/config --undefine CONFIG_LOCALVERSION_AUTO
		scripts/config --enable CONFIG_LZ4HC_COMPRESS
		# from patches
		scripts/config --enable CONFIG_FUTEX2
		scripts/config --enable CONFIG_VHBA
		scripts/config --module CONFIG_SND_VIRTIO
		# kdump
		scripts/config --enable CONFIG_DEBUG_INFO
		scripts/config --enable CONFIG_CRASH_DUMP
		scripts/config --enable CONFIG_PROC_VMCORE

	### AUFS
		scripts/config --module CONFIG_AUFS_FS
		scripts/config --undefine CONFIG_AUFS_BRANCH_MAX_127
		scripts/config --undefine CONFIG_AUFS_BRANCH_MAX_511
		scripts/config --undefine CONFIG_AUFS_BRANCH_MAX_1023
		scripts/config --enable CONFIG_AUFS_BRANCH_MAX_32767
		scripts/config --enable CONFIG_AUFS_HNOTIFY
		scripts/config --enable CONFIG_AUFS_EXPORT
		scripts/config --enable CONFIG_AUFS_XATTR
		scripts/config --undefine CONFIG_AUFS_FHSM
		scripts/config --enable CONFIG_AUFS_RDU
		scripts/config --enable CONFIG_AUFS_DIRREN
		scripts/config --enable CONFIG_AUFS_SHWH
		scripts/config --enable CONFIG_AUFS_BR_RAMFS
		scripts/config --enable CONFIG_AUFS_BR_FUSE
		scripts/config --enable CONFIG_AUFS_BR_HFSPLUS
		scripts/config --undefine CONFIG_AUFS_DEBUG

	### CPU optimization
		# I want to be able to slap an HDD with this kernel on it in just about any machine
		# I'm very, very unlikely to encounter any CPUs older than AMD K8
		scripts/config --enable CONFIG_MK8SSE3
		scripts/config --undefine CONFIG_GENERIC_CPU
		# I'd add an -mtune=znver1 if I could

	### NTFS3
		scripts/config --module CONFIG_NTFS3_FS
		scripts/config --disable NTFS3_64BIT_CLUSTER
		scripts/config --enable NTFS3_LZX_XPRESS
		scripts/config --disable NTFS3_FS_POSIX_ACL

	### Android stuff
		scripts/config --enable CONFIG_ASHMEM
		scripts/config --enable CONFIG_ANDROID
		scripts/config --enable CONFIG_ANDROID_BINDER_IPC
		scripts/config --enable CONFIG_ANDROID_BINDERFS
		scripts/config --set-str CONFIG_ANDROID_BINDER_DEVICES "binder,hwbinder,vndbinder"

	### le9-patch values
		scripts/config --set-val CONFIG_CLEAN_LOW_KBYTES 131072
		scripts/config --set-val CONFIG_CLEAN_MIN_KBYTES 262144

	## Fill in remaining defaults
		make olddefconfig

	### Prepared version
		make -s kernelrelease > version
		echo "Prepared $pkgbase version $(<version)"

	### Optionally use running kernel's config
	# code originally by nous; http://aur.archlinux.org/packages.php?ID=40191
	if [ -n "$_use_current" ]; then
		if [[ -s /proc/config.gz ]]; then
			_msg3 "Extracting config from /proc/config.gz..."
			# modprobe configs
			zcat /proc/config.gz > ./.config
		else
			warning "Your kernel was not compiled with IKCONFIG_PROC!"
			warning "You cannot read the current config!"
			warning "Aborting!"
			exit
		fi
	fi

	### Optionally set tickrate to 1000
	if [ -n "$_1k_HZ_ticks" ]; then
		_msg3 "Setting tick rate to 1k..."
			scripts/config --disable CONFIG_HZ_300
			scripts/config --enable CONFIG_HZ_1000
			scripts/config --set-val CONFIG_HZ 1000
	fi

	### Optionally disable NUMA for 64-bit kernels only
		# (x86 kernels do not support NUMA)
		if [ -n "$_NUMAdisable" ]; then
			_msg3 "Disabling NUMA from kernel config..."
			scripts/config --disable CONFIG_NUMA
		fi

	### Optionally load needed modules for the make localmodconfig
		# See https://aur.archlinux.org/packages/modprobed-db
		if [ -n "$_localmodcfg" ]; then
			if [ -f $HOME/.config/modprobed.db ]; then
			_msg3 "Running Steven Rostedt's make localmodconfig now"
			make LSMOD=$HOME/.config/modprobed.db localmodconfig
		else
			error "No modprobed.db data found"
			exit
			fi
		fi



	### Running make nconfig
	[[ -z "$_makenconfig" ]] || make nconfig

	### Running make menuconfig
	[[ -z "$_makemenuconfig" ]] || make menuconfig

	### Running make xconfig
	[[ -z "$_makexconfig" ]] || make xconfig

	### Running make gconfig
	[[ -z "$_makegconfig" ]] || make gconfig

	### Save configuration for later reuse
	cat .config > "${startdir}/config.last"
}

build() {
	cd $_srcname

	make all
	make htmldocs
}

_package() {
	pkgdesc="The $pkgdesc kernel and modules"
	depends=('coreutils' 'kmod' 'initramfs')
	optdepends=('crda: to set the correct wireless channels of your country'
	            'linux-firmware: firmware images needed for some devices'
	            'modprobed-db: Keeps track of EVERY kernel module that has ever been probed - useful for those of us who make localmodconfig')
	provides=(VIRTUALBOX-GUEST-MODULES WIREGUARD-MODULE)

	cd $_srcname
	local kernver="$(<version)"
	local modulesdir="$pkgdir/usr/lib/modules/$kernver"

	msg2 "Installing boot image..."
	# systemd expects to find the kernel here to allow hibernation
	# https://github.com/systemd/systemd/commit/edda44605f06a41fb86b7ab8128dcf99161d2344
	install -Dm644 "$(make -s image_name)" "$modulesdir/vmlinuz"

	# Used by mkinitcpio to name the kernel
	echo "$pkgbase" | install -Dm644 /dev/stdin "$modulesdir/pkgbase"

	msg2 "Installing modules..."
	make INSTALL_MOD_PATH="$pkgdir/usr" INSTALL_MOD_STRIP=1 modules_install

	# remove build and source links
	rm "$modulesdir"/{source,build}
}

_package-headers() {
	_aug_colorize

	pkgdesc="Headers and scripts for building modules for the $pkgdesc kernel"
	depends=('linux-kitsinger-5.12' 'pahole')

	cd $_srcname
	local builddir="$pkgdir/usr/lib/modules/$(<version)/build"

	msg2 "Installing build files..."
	install -Dt "$builddir" -m644 .config Makefile Module.symvers System.map \
		localversion.* version vmlinux
	install -Dt "$builddir/kernel" -m644 kernel/Makefile
	install -Dt "$builddir/arch/x86" -m644 arch/x86/Makefile
	cp -t "$builddir" -a scripts

	# add objtool for external module building and enabled VALIDATION_STACK option
	install -Dt "$builddir/tools/objtool" tools/objtool/objtool

	# add xfs and shmem for aufs building
	mkdir -p "$builddir"/{fs/xfs,mm}

	msg2 "Installing headers..."
	cp -t "$builddir" -a include
	cp -t "$builddir/arch/x86" -a arch/x86/include
	install -Dt "$builddir/arch/x86/kernel" -m644 arch/x86/kernel/asm-offsets.s

	install -Dt "$builddir/drivers/md" -m644 drivers/md/*.h
	install -Dt "$builddir/net/mac80211" -m644 net/mac80211/*.h

	# https://bugs.archlinux.org/task/13146
	install -Dt "$builddir/drivers/media/i2c" -m644 drivers/media/i2c/msp3400-driver.h

	# https://bugs.archlinux.org/task/20402
	install -Dt "$builddir/drivers/media/usb/dvb-usb" -m644 drivers/media/usb/dvb-usb/*.h
	install -Dt "$builddir/drivers/media/dvb-frontends" -m644 drivers/media/dvb-frontends/*.h
	install -Dt "$builddir/drivers/media/tuners" -m644 drivers/media/tuners/*.h

	# https://bugs.archlinux.org/task/71392
	install -Dt "$builddir/drivers/iio/common/hid-sensors" -m644 drivers/iio/common/hid-sensors/*.h

	msg2 "Installing KConfig files..."
	find . -name 'Kconfig*' -exec install -Dm644 {} "$builddir/{}" \;

	msg2 "Removing unneeded architectures..."
	local arch
	for arch in "$builddir"/arch/*/; do
		[[ $arch = */x86/ ]] && continue
		_msg3 "Removing $(basename "$arch")"
		rm -r "$arch"
	done

	msg2 "Removing documentation..."
	rm -r "$builddir/Documentation"

	msg2 "Removing broken symlinks..."
	find -L "$builddir" -type l -printf 'Removing %P\n' -delete

	msg2 "Removing loose objects..."
	find "$builddir" -type f -name '*.o' -printf 'Removing %P\n' -delete

	msg2 "Stripping build tools..."
	local file
	while read -rd '' file; do
		case "$(file -bi "$file")" in
			application/x-sharedlib\;*)      # Libraries (.so)
				strip -v $STRIP_SHARED "$file" ;;
			application/x-archive\;*)        # Libraries (.a)
				strip -v $STRIP_STATIC "$file" ;;
			application/x-executable\;*)     # Binaries
				strip -v $STRIP_BINARIES "$file" ;;
			application/x-pie-executable\;*) # Relocatable binaries
				strip -v $STRIP_SHARED "$file" ;;
		esac
	done < <(find "$builddir" -type f -perm -u+x ! -name vmlinux -print0)

	msg2 "Stripping vmlinux..."
	strip -v $STRIP_STATIC "$builddir/vmlinux"

	msg2 "Adding symlink..."
	mkdir -p "$pkgdir/usr/src"
	ln -sr "$builddir" "$pkgdir/usr/src/$pkgbase"
}

_package-docs() {
	pkgdesc="Documentation for the $pkgdesc kernel"
	depends=('linux-kitsinger-5.13')

	cd $_srcname
	local builddir="$pkgdir/usr/lib/modules/$(<version)/build"

	msg2 "Installing documentation..."
	local src dst
	while read -rd '' src; do
		dst="${src#Documentation/}"
		dst="$builddir/Documentation/${dst#output/}"
		install -Dm644 "$src" "$dst"
	done < <(find Documentation -name '.*' -prune -o ! -type d -print0)

	msg2 "Adding symlink..."
	mkdir -p "$pkgdir/usr/share/doc"
	ln -sr "$builddir/Documentation" "$pkgdir/usr/share/doc/$pkgbase"
}

pkgname=("$pkgbase" "$pkgbase-headers" "$pkgbase-docs")
for _p in "${pkgname[@]}"; do
	eval "package_$_p() {
		$(declare -f "_package${_p#$pkgbase}")
		_package${_p#$pkgbase}
	}"
done

validpgpkeys=(
	'ABAF11C65A2970B130ABE3C479BE3E4300411886'  # Linus Torvalds
	'647F28654894E3BD457199BE38DBBDC86092693E'  # Greg Kroah-Hartman
	'A2FF3A36AAA56654109064AB19802F8B0D70FC30'  # Jan Alexander Steffens (heftig)
	'C7E7849466FE2358343588377258734B41C31549'  # David Runge <dvzrv@archlinux.org>
)
